code:0DBF code_DBF:
code:0DBF   mov     R1, #0x54 ; 'T'
code:0DC1 code_DC1:
code:0DC1   lcall   code_E85    ; преобразуем в дополнительный код и сохраняем по 0x54
code:0DC4   nop
code:0DC5   nop
code:0DC6   nop
code:0DC7   mov     R5, RAM_B       ; \ R5 = add_adc_0
code:0DC9   mov     R4, RAM_A       ; | R4 = add_adc_1
code:0DCB   mov     R3, RAM_9       ; | R3 = add_adc_2
code:0DCD   mov     R2, RAM_8       ; | R2 = add_adc_3
code:0DCF   mov     R0, #0x47       ; |
code:0DD1   lcall   code_811        ; / [R2-R5] <- [R2-R5] + [R0-R0-1]
code:0DD4   nop
code:0DD5   nop
code:0DD6   nop
code:0DD7   mov     R0, #0x44
code:0DD9   lcall   code_E04        ; [R0-R0+3] = <R5-R2>
code:0DDC   nop
code:0DDD   nop
code:0DDE   nop
code:0DDF   mov     R0, #0x50
code:0DE1   inc     @R0
code:0DE2   cjne    @R0, #4, code_DFF
code:0DE5   mov     @R0, #0
code:0DE7   mov     DPTR, #0xEC1
code:0DEA   lcall   code_647
code:0DED   nop
code:0DEE   nop
code:0DEF   nop
code:0DF0   lcall   code_E51
code:0DF3   nop
code:0DF4   nop
code:0DF5   nop
code:0DF6   clr     A
code:0DF7   mov     RAM_44, A
code:0DF9   mov     RAM_45, A
code:0DFB   mov     RAM_46, A
code:0DFD   mov     RAM_47, A
code:0DFF code_DFF:
code:0DFF   ret
