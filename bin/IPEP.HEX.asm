

;
; +-------------------------------------------------------------------------+
; |      This file was generated by The Interactive Disassembler (IDA)      |
; |           Copyright (c) 2021 Hex-Rays, <support@hex-rays.com>           |
; |                      License info: 48-6CCC-38BF-48                      |
; |                             IDA PRO 7.6 SP1                             |
; +-------------------------------------------------------------------------+
;
; Input SHA256 : B47CF62C97A1E9AC37CB5F51E3E6CBCAD7ED4C68B8C1E21F8D674C9F7B686818
; Input MD5    : 1BCDC38F193FD34367BE45337B4E433B
; Input CRC32  : B5CE0AF4

; File Name   : C:\Projects\IPEP\bin\IPEP.HEX
; Format      : Intel Hex Object Format

; Processor       : AT89S8252 [RAM=256 ROM=0 EPROM=0 EEPROM=0]
; Target assembler: ASMI
; Byte sex        : Big endian

; ===========================================================================

; Segment type: Pure code
                ;.segment code

; =============== S U B R O U T I N E =======================================


                ; public start
start:
                mov     IE, #0          ; Interrupt Enable Register 0
; End of function start


; =============== S U B R O U T I N E =======================================

; External interrupt 0 (INT0 / EX0)
; Attributes: thunk

                ; public extint0
extint0:
                ljmp    extint0_0
; End of function extint0

; ---------------------------------------------------------------------------
                .byte 0xFF;(array 0xD)
; [00000003 BYTES: COLLAPSED FUNCTION extint1. PRESS CTRL-NUMPAD+ TO EXPAND]
                .byte 0xFF;(array 0xD)
; [00000003 BYTES: COLLAPSED FUNCTION serint. PRESS CTRL-NUMPAD+ TO EXPAND]
                .byte 0xFF;(array 0x2A)
; ---------------------------------------------------------------------------
                ljmp    extint0_0

; =============== S U B R O U T I N E =======================================


extint0_0:                              ; CODE XREF: extint0↑j
                                        ; code:0050↑j

; FUNCTION CHUNK AT 0292 SIZE 0000002B BYTES
; FUNCTION CHUNK AT 03CE SIZE 000000CC BYTES
; FUNCTION CHUNK AT 04A4 SIZE 00000042 BYTES
; FUNCTION CHUNK AT 052F SIZE 0000003A BYTES
; FUNCTION CHUNK AT 0830 SIZE 0000029D BYTES
; FUNCTION CHUNK AT 0AD1 SIZE 00000107 BYTES
; FUNCTION CHUNK AT 0BF5 SIZE 0000006F BYTES
; FUNCTION CHUNK AT 0C6C SIZE 000000BD BYTES
; FUNCTION CHUNK AT 1170 SIZE 000000F3 BYTES
; FUNCTION CHUNK AT 12AB SIZE 00000275 BYTES
; FUNCTION CHUNK AT 15E6 SIZE 0000002C BYTES
; FUNCTION CHUNK AT 161D SIZE 000000CE BYTES
; FUNCTION CHUNK AT 1774 SIZE 00000051 BYTES
; FUNCTION CHUNK AT 17DF SIZE 0000005B BYTES

                mov     SP, #RAM_6D     ; Stack Pointer
                clr     A
                mov     PCON, A         ; Power Control Register
                mov     T2CON, A        ; Timer 2 Control
                mov     SCON, #0x50 ; 'P' ; Serial Port Control
                mov     TMOD, #0x20 ; ' ' ; Timer Mode Control Register
                mov     TCON, #0x40 ; '@' ; Timer Control Register
                mov     TH1, #0xF3      ; Timer 1 High Byte
                mov     PCON, #0x80     ; Power Control Register
                setb    IP.4            ; Interrupt Priority Register
                mov     IE, #0x94       ; Interrupt Enable Register 0
                mov     T2MOD, #2       ; Timer 2 Mode
                mov     RCAP2L, #0xE0   ; Timer 2 Capture Low Byte
                mov     RCAP2H, #0xFA   ; Timer 2 Capture High Byte
                mov     R0, #0x20 ; ' '
                clr     A

code_7B:                                ; CODE XREF: extint0_0+2A↓j
                mov     @R0, A
                inc     R0
                cjne    R0, #0x6B, code_7B ; 'k'
                mov     R0, #0x80

code_82:                                ; CODE XREF: extint0_0+31↓j
                mov     @R0, A
                inc     R0
                cjne    R0, #0xEF, code_82
                mov     RAM_67, A
                mov     R3, #0x22 ; '"'

code_8B:                                ; CODE XREF: extint0_0+3C↓j
                clr     P3.5            ; Port 3
                setb    P3.5            ; Port 3
                djnz    R3, code_8B
                mov     R6, #0
                lcall   code_D79
                mov     R0, #0x34 ; '4'
                mov     @R0, #0xE0
                mov     R0, #0x39 ; '9'
                mov     @R0, #0x10
                clr     P2.3            ; Port 2
                lcall   code_3A1
                mov     R0, #0x34 ; '4'
                mov     @R0, #0x70 ; 'p'
                mov     RAM_2A, #3
                mov     R6, #1
                lcall   code_D79
                nop
                nop
                nop
                lcall   code_2FE
                lcall   code_3A1
                mov     R6, #0
                lcall   code_D79
                mov     RAM_2A, #0
                lcall   code_D79
                clr     P01             ; Port 0
                clr     P02             ; Port 0
                ljmp    code_17E2
; ---------------------------------------------------------------------------

code_CA:                                ; CODE XREF: extint0_0:code_17DF↓j
                ljmp    code_1170
; ---------------------------------------------------------------------------

code_CD:                                ; CODE XREF: extint0_0:code_1200↓j
                mov     A, #0x10
                lcall   code_20B
                mov     A, #2
                lcall   code_20B
                mov     A, #0x20 ; ' '
                lcall   code_20B
                mov     A, #4
                lcall   code_20B
                clr     P1.1            ; Port 1
                ajmp    code_292
; ---------------------------------------------------------------------------

code_E5:                                ; CODE XREF: extint0_0+CD↓j
                ljmp    code_3CE
; ---------------------------------------------------------------------------

code_E8:                                ; CODE XREF: extint0_0+C7↓j
                                        ; extint0_0:code_169↓j
                dec     @R0
                clr     P2.6            ; Port 2
                nop
                nop
                setb    P2.6            ; Port 2
                ljmp    code_126
; ---------------------------------------------------------------------------

code_F2:                                ; CODE XREF: extint0_0+D8↓j
                                        ; extint0_0+267↓j
                setb    IP.2            ; Interrupt Priority Register
                mov     IE, #0x94       ; Interrupt Enable Register 0
                jnb     RAM_27.2, code_FC
                clr     RAM_27.2

code_FC:                                ; CODE XREF: extint0_0+A4↑j
                                        ; extint0_0+B1↓j ...
                mov     PCON, #0x81     ; Power Control Register
                jnb     RAM_27.2, code_106
                clr     RAM_27.2
                ajmp    code_FC
; ---------------------------------------------------------------------------

code_106:                               ; CODE XREF: extint0_0+AC↑j
                nop
                nop
                nop

code_109:                               ; CODE XREF: extint0_0+38B↓j
                                        ; extint0_0+12B9↓j
                mov     A, RAM_29
                jz      code_12D
                cjne    A, #3, code_131
                clr     P01             ; Port 0
                orl     P1, #0x20       ; Port 1
                mov     R0, #0x64 ; 'd'
                mov     A, @R0
                subb    A, #4
                jnc     code_E8
                mov     A, P0           ; Port 0
                anl     A, #0xF8
                cjne    A, #0xF8, code_E5
                cjne    @R0, #0, code_164

code_126:                               ; CODE XREF: extint0_0+9C↑j
                                        ; extint0_0+DC↓j ...
                mov     A, RAM_29
                inc     A
                mov     RAM_29, A
                ajmp    code_F2
; ---------------------------------------------------------------------------

code_12D:                               ; CODE XREF: extint0_0+B8↑j
                setb    P01             ; Port 0
                sjmp    code_126
; ---------------------------------------------------------------------------

code_131:                               ; CODE XREF: extint0_0+BA↑j
                cjne    A, #7, code_13C
                lcall   code_DBF
                nop
                nop
                nop
                ajmp    code_126
; ---------------------------------------------------------------------------

code_13C:                               ; CODE XREF: extint0_0:code_131↑j
                cjne    A, #8, code_147
                lcall   code_DBF
                nop
                nop
                nop
                sjmp    code_126
; ---------------------------------------------------------------------------

code_147:                               ; CODE XREF: extint0_0:code_13C↑j
                cjne    A, #9, code_152
                lcall   code_DBF
                nop
                nop
                nop
                ajmp    code_126
; ---------------------------------------------------------------------------

code_152:                               ; CODE XREF: extint0_0:code_147↑j
                cjne    A, #0xA, code_18A
                lcall   code_DBF
                mov     R0, #0x51 ; 'Q'
                lcall   code_E04
                nop
                nop
                nop
                setb    P02             ; Port 0
                ajmp    code_126
; ---------------------------------------------------------------------------

code_164:                               ; CODE XREF: extint0_0+D0↑j
                                        ; extint0_0+150↓j
                clr     A
                mov     RAM_65, A
                mov     RAM_26, A

code_169:                               ; CODE XREF: extint0_0+144↓j
                ajmp    code_E8
; ---------------------------------------------------------------------------

code_16B:                               ; CODE XREF: extint0_0+146↓j
                mov     A, RAM_22
                cjne    A, #0x38, code_173 ; '8'
                ljmp    code_176
; ---------------------------------------------------------------------------

code_173:                               ; CODE XREF: extint0_0+11A↑j
                cjne    A, #0x39, code_17D ; '9'

code_176:                               ; CODE XREF: extint0_0+11D↑j
                                        ; extint0_0+12D↓j ...
                setb    RAM_27.4
                clr     RAM_27.1
                ljmp    code_16DE
; ---------------------------------------------------------------------------

code_17D:                               ; CODE XREF: extint0_0:code_173↑j
                cjne    A, #0x37, code_182 ; '7'
                ajmp    code_176
; ---------------------------------------------------------------------------

code_182:                               ; CODE XREF: extint0_0:code_17D↑j
                cjne    A, #0x32, code_187 ; '2'
                ajmp    code_176
; ---------------------------------------------------------------------------

code_187:                               ; CODE XREF: extint0_0:code_182↑j
                ljmp    code_15E6
; ---------------------------------------------------------------------------

code_18A:                               ; CODE XREF: extint0_0:code_152↑j
                cjne    A, #0xD, code_1A8
                clr     P02             ; Port 0
                anl     P1, #0xDF       ; Port 1
                mov     R0, #0x64 ; 'd'
                mov     A, @R0
                subb    A, #4
                jnc     code_169
                jb      RAM_27.1, code_16B

code_19C:                               ; CODE XREF: extint0_0+1695↓j
                mov     A, P0           ; Port 0
                anl     A, #0xF8
                cjne    A, #0xF8, code_208
                cjne    @R0, #0, code_164
                mov     A, RAM_29

code_1A8:                               ; CODE XREF: extint0_0:code_18A↑j
                cjne    A, #0x11, code_1B3
                lcall   code_E00
                nop
                nop
                nop
                ajmp    code_126
; ---------------------------------------------------------------------------

code_1B3:                               ; CODE XREF: extint0_0:code_1A8↑j
                cjne    A, #0x12, code_1BE
                lcall   code_E00
                nop
                nop
                nop
                ajmp    code_126
; ---------------------------------------------------------------------------

code_1BE:                               ; CODE XREF: extint0_0:code_1B3↑j
                cjne    A, #0x13, code_1C6
                lcall   code_E00
                ajmp    code_126
; ---------------------------------------------------------------------------

code_1C6:                               ; CODE XREF: extint0_0:code_1BE↑j
                cjne    A, #0x14, code_1DA
                mov     RAM_29, #1
                lcall   code_E00
                nop
                nop
                nop
                mov     R0, #0x55 ; 'U'
                lcall   code_E04
                ljmp    code_833
; ---------------------------------------------------------------------------

code_1DA:                               ; CODE XREF: extint0_0:code_1C6↑j
                jb      P2.7, code_1DF  ; Port 2
                nop
                nop

code_1DF:                               ; CODE XREF: extint0_0:code_1DA↑j
                ajmp    code_126
; ---------------------------------------------------------------------------

code_1E1:                               ; CODE XREF: extint0_0+9D4↓j
                                        ; extint0_0:code_B5F↓j ...
                jnb     P3.2, code_1F2  ; Port 3
                mov     A, RAM_38
                anl     A, #1
                jnz     code_1F2
                orl     RAM_38, #1
                lcall   code_527
                ajmp    code_1F5
; ---------------------------------------------------------------------------

code_1F2:                               ; CODE XREF: extint0_0:code_1E1↑j
                                        ; extint0_0+195↑j
                anl     RAM_38, #0xFE

code_1F5:                               ; CODE XREF: extint0_0+19D↑j
                lcall   code_3A4
                clr     A
                mov     IE, A           ; Interrupt Enable Register 0
                mov     IE, #0x84       ; Interrupt Enable Register 0
                jb      P07, code_203   ; Port 0
                ajmp    code_FC
; ---------------------------------------------------------------------------

code_203:                               ; CODE XREF: extint0_0+1AB↑j
                mov     RAM_67, #0
                ajmp    code_FC
; ---------------------------------------------------------------------------

code_208:                               ; CODE XREF: extint0_0+14D↑j
                ljmp    code_3CE
; End of function extint0_0


; =============== S U B R O U T I N E =======================================


code_20B:                               ; CODE XREF: extint0_0+7C↑p
                                        ; extint0_0+81↑p ...
                mov     R3, #8

code_20D:                               ; CODE XREF: code_20B+9↓j
                clr     P3.5            ; Port 3
                rlc     A
                mov     P1.1, C         ; Port 1
                setb    P3.5            ; Port 3
                djnz    R3, code_20D
                ret
; End of function code_20B

; ---------------------------------------------------------------------------
                nop
                nop
                nop

; =============== S U B R O U T I N E =======================================


code_21A:                               ; CODE XREF: extint1_0+17↓p
                                        ; extint1_0+1D↓p ...
                mov     R3, #8

code_21C:                               ; CODE XREF: code_21A+9↓j
                clr     P3.5            ; Port 3
                mov     C, P3.4         ; Port 3
                rlc     A
                setb    P3.5            ; Port 3
                djnz    R3, code_21C
                ret
; End of function code_21A


; =============== S U B R O U T I N E =======================================


extint1_0:                              ; CODE XREF: extint1↑j
                push    ACC             ; Accumulator
                push    PSW             ; Program Status Word
                push    B               ; B Register
                push    RAM_1
                push    RAM_2
                push    RAM_3
                clr     P2.6            ; Port 2
                nop
                nop
                setb    P2.6            ; Port 2
                mov     A, #0x38 ; '8'
                lcall   code_20B
                lcall   code_21A
                mov     R2, A
                mov     RAM_59, A
                lcall   code_21A
                mov     R3, A
                mov     RAM_5A, A
                mov     A, R2
                rlc     A
                jnc     code_251
                clr     C
                rrc     A
                sjmp    code_258
; ---------------------------------------------------------------------------

code_251:                               ; CODE XREF: extint1_0+25↑j
                mov     A, R3
                cpl     A
                mov     R3, A
                mov     RAM_5A, A
                mov     A, R2
                cpl     A

code_258:                               ; CODE XREF: extint1_0+29↑j
                mov     R2, A
                mov     RAM_59, A
                pop     RAM_3
                pop     RAM_2
                pop     RAM_1
                pop     B               ; B Register
                pop     PSW             ; Program Status Word
                pop     ACC             ; Accumulator
                reti
; End of function extint1_0

; ---------------------------------------------------------------------------
                mov     R1, #0x30 ; '0'
                mov     A, #0x68 ; 'h'

code_26C:                               ; CODE XREF: code:0283↓j
                lcall   code_20B
                lcall   code_21A
                mov     @R1, A
                inc     R1
                lcall   code_21A
                mov     @R1, A
                inc     R1
                lcall   code_21A
                mov     @R1, A
                inc     R1
                cjne    R1, #0x33, code_285 ; '3'
                mov     A, #0x78 ; 'x'
                ajmp    code_26C
; ---------------------------------------------------------------------------

code_285:                               ; CODE XREF: code:027E↑j
                nop
                nop
                nop
                mov     R2, A
                anl     A, #0xE0
                orl     A, R3
                mov     R3, A
                mov     A, R2
                anl     A, #0x1F
                mov     R2, A
                reti
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR extint0_0

code_292:                               ; CODE XREF: extint0_0+90↑j
                mov     A, #0x60 ; '`'
                lcall   code_20B
                mov     A, #0x14
                lcall   code_20B
                mov     A, #0xF2
                lcall   code_20B
                mov     A, #0x44 ; 'D'
                lcall   code_20B
                mov     A, #0x70 ; 'p'
                lcall   code_20B
                mov     A, #0xAD
                lcall   code_20B
                mov     A, #0xE4
                lcall   code_20B
                mov     A, #0xBF
                lcall   code_20B
                ljmp    code_F2
; END OF FUNCTION CHUNK FOR extint0_0

; =============== S U B R O U T I N E =======================================


code_2BD:                               ; CODE XREF: extint0_0+4F7↓p
                                        ; extint0_0+AFD↓p ...
                mov     R0, #0x5B ; '['
                acall   code_2D8
                mov     R0, #0x5D ; ']'
                mov     R1, #0x5E ; '^'
                mov     R3, #3

code_2C7:                               ; CODE XREF: code_2BD+10↓j
                acall   code_2D1
                mov     A, @R0
                acall   code_2D3
                dec     R0
                djnz    R3, code_2C7
                ajmp    code_2FE
; End of function code_2BD


; =============== S U B R O U T I N E =======================================


code_2D1:                               ; CODE XREF: code_2BD:code_2C7↑p
                mov     A, @R0
                swap    A
; End of function code_2D1


; =============== S U B R O U T I N E =======================================


code_2D3:                               ; CODE XREF: code_2BD+D↑p
                anl     A, #0xF
                mov     @R1, A
                inc     R1
                ret
; End of function code_2D3


; =============== S U B R O U T I N E =======================================


code_2D8:                               ; CODE XREF: code_2BD+2↑p
                xch     A, R0
                mov     R1, A
                xch     A, R0
                mov     R4, #3

code_2DD:                               ; CODE XREF: code_2D8+8↓j
                mov     @R1, #0
                inc     R1
                djnz    R4, code_2DD
                mov     R3, #0x10

code_2E4:                               ; CODE XREF: code_2D8+21↓j
                clr     C
                rlc     A
                xch     A, R2
                rlc     A
                xch     A, R2
                xch     A, R0
                mov     R1, A
                xch     A, R0
                mov     R4, #3
                mov     R5, A

code_2EF:                               ; CODE XREF: code_2D8+1C↓j
                mov     A, @R1
                addc    A, @R1
                da      A
                mov     @R1, A
                inc     R1
                djnz    R4, code_2EF
                mov     A, R5
                jc      code_2FC
                djnz    R3, code_2E4
                clr     C

code_2FC:                               ; CODE XREF: code_2D8+1F↑j
                nop
                ret
; End of function code_2D8


; =============== S U B R O U T I N E =======================================


code_2FE:                               ; CODE XREF: extint0_0+5F↑p
                                        ; code_2BD+12↑j

; FUNCTION CHUNK AT 032C SIZE 00000075 BYTES

                mov     R2, #4
                mov     R0, #0x5F ; '_'
                jb      RAM_28.0, code_32C
                mov     R1, #0x33 ; '3'

code_307:                               ; CODE XREF: code_2FE+F↓j
                mov     A, @R0
                acall   code_312

code_30A:                               ; CODE XREF: code:0327↓j
                mov     @R1, A
                dec     R1
                inc     R0
                djnz    R2, code_307
                sjmp    code_367
; End of function code_2FE

; ---------------------------------------------------------------------------
                nop

; =============== S U B R O U T I N E =======================================


code_312:                               ; CODE XREF: code_2FE+A↑p
                inc     A
                movc    A, @A+PC
                ret
; End of function code_312

; ---------------------------------------------------------------------------
                .byte 0xFC
                .byte  0xC
                .byte 0xDA
                .byte 0x9E
                .byte 0x2E ; .
                .byte 0xB6
                .byte 0xF6
                .byte 0x1C
                .byte 0xFE
                .byte 0xBE

; =============== S U B R O U T I N E =======================================


code_31F:                               ; CODE XREF: code_2FE+31↓p
                inc     A
                movc    A, @A+PC
                ret
; End of function code_31F

; ---------------------------------------------------------------------------
                .byte 0xFC
                .byte 0x60 ; `
                .byte 0xDA
; ---------------------------------------------------------------------------
                movx    @R0, A
                xrl     A, @R0
                cjne    @R0, #0xBE, code_30A
                mov     R6, A
                mov     @R0, A
; START OF FUNCTION CHUNK FOR code_2FE

code_32C:                               ; CODE XREF: code_2FE+4↑j
                mov     R1, #0x30 ; '0'

code_32E:                               ; CODE XREF: code_2FE+36↓j
                mov     A, @R0
                acall   code_31F
                mov     @R1, A
                inc     R1
                inc     R0
                djnz    R2, code_32E
                mov     R0, #0x37 ; '7'
                mov     A, @R0
                anl     A, #0xFD
                jnb     RAM_2F.7, code_343
                orl     A, #8
                mov     @R0, A
                ajmp    code_346
; ---------------------------------------------------------------------------

code_343:                               ; CODE XREF: code_2FE+3D↑j
                anl     A, #0xF7
                mov     @R0, A

code_346:                               ; CODE XREF: code_2FE+43↑j
                jb      RAM_28.1, code_352
                mov     R0, #0x35 ; '5'
                mov     @R0, #0x60 ; '`'
                inc     R0
                mov     @R0, #0xFC
                ajmp    code_359
; ---------------------------------------------------------------------------

code_352:                               ; CODE XREF: code_2FE:code_346↑j
                mov     R0, #0x35 ; '5'
                mov     @R0, #0
                inc     R0
                mov     @R0, #0xDA

code_359:                               ; CODE XREF: code_2FE+52↑j
                mov     A, RAM_36
                orl     A, #1
                mov     RAM_36, A

code_35F:                               ; CODE XREF: code_2FE+88↓j
                mov     A, RAM_39
                anl     A, #0xFE
                mov     RAM_39, A
                ajmp    code_3A1
; ---------------------------------------------------------------------------

code_367:                               ; CODE XREF: code_2FE+11↑j
                mov     R0, #0x37 ; '7'
                mov     A, @R0
                anl     A, #0xF7
                jnb     RAM_2F.7, code_375
                orl     A, #2
                mov     @R0, A
                ljmp    code_378
; ---------------------------------------------------------------------------

code_375:                               ; CODE XREF: code_2FE+6E↑j
                anl     A, #0xFD
                mov     @R0, A

code_378:                               ; CODE XREF: code_2FE+74↑j
                jb      P07, code_388   ; Port 0
                mov     A, RAM_67
                mov     DPTR, #0x315
                movc    A, @A+DPTR
                mov     RAM_35, A
                mov     RAM_36, #0xFC
                ajmp    code_35F
; ---------------------------------------------------------------------------

code_388:                               ; CODE XREF: code_2FE:code_378↑j
                jb      RAM_28.1, code_394
                mov     R0, #0x36 ; '6'
                mov     @R0, #0xC
                dec     R0
                mov     @R0, #0xFC
                ajmp    code_39B
; ---------------------------------------------------------------------------

code_394:                               ; CODE XREF: code_2FE:code_388↑j
                mov     R0, #0x36 ; '6'
                mov     @R0, #0
                dec     R0
                mov     @R0, #0xDA

code_39B:                               ; CODE XREF: code_2FE+94↑j
                mov     A, RAM_39
                orl     A, #1
                mov     RAM_39, A
; END OF FUNCTION CHUNK FOR code_2FE

; =============== S U B R O U T I N E =======================================


code_3A1:                               ; CODE XREF: extint0_0+4D↑p
                                        ; extint0_0+62↑p ...
                lcall   code_100D
; End of function code_3A1


; =============== S U B R O U T I N E =======================================


code_3A4:                               ; CODE XREF: extint0_0:code_1F5↑p
                                        ; extint0_0+3B9↓p ...
                clr     P2.0            ; Port 2
                mov     R2, #0xA
                mov     R0, #0x30 ; '0'

code_3AA:                               ; CODE XREF: code_3A4+22↓j
                                        ; code_3A4:code_3C8↓j
                mov     R3, #8
                mov     A, @R0

code_3AD:                               ; CODE XREF: code_3A4+15↓j
                rrc     A
                mov     P2.1, C         ; Port 2
                nop
                setb    P2.2            ; Port 2
                nop
                nop
                nop
                nop
                clr     P2.2            ; Port 2
                djnz    R3, code_3AD
                inc     R0
                dec     R2
                cjne    R2, #5, code_3C8
                setb    P2.0            ; Port 2
                setb    P2.3            ; Port 2
                clr     P2.3            ; Port 2
                ajmp    code_3AA
; ---------------------------------------------------------------------------

code_3C8:                               ; CODE XREF: code_3A4+19↑j
                cjne    R2, #0, code_3AA
                setb    P2.3            ; Port 2
                ret
; End of function code_3A4

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR extint0_0

code_3CE:                               ; CODE XREF: extint0_0:code_E5↑j
                                        ; extint0_0:code_208↑j
                mov     R7, #4
                lcall   code_569
                mov     A, P0           ; Port 0
                anl     A, #0xF8
                mov     R6, A
                cjne    A, #0xF8, code_3E3
                lcall   code_D29
                ajmp    code_109
; ---------------------------------------------------------------------------

code_3E0:                               ; CODE XREF: extint0_0+393↓j
                ljmp    code_12AB
; ---------------------------------------------------------------------------

code_3E3:                               ; CODE XREF: extint0_0+385↑j
                mov     A, R6
                anl     A, #0x80
                jz      code_3E0
                mov     A, R6
                anl     A, #0x78
                rl      A
                clr     C
                mov     R5, #0
                mov     R7, #4

code_3F1:                               ; CODE XREF: extint0_0:code_3F5↓j
                rlc     A
                jc      code_3F5
                inc     R5

code_3F5:                               ; CODE XREF: extint0_0+39F↑j
                djnz    R7, code_3F1
                cjne    R5, #1, code_411
                mov     A, R6
                anl     A, #8
                jz      code_45A
                mov     A, R6
                anl     A, #0x20
                jnz     code_45D
                jb      RAM_28.2, code_41C
                setb    RAM_28.2
                anl     RAM_37, #0x9F
                acall   code_3A4
                ljmp    code_421
; ---------------------------------------------------------------------------

code_411:                               ; CODE XREF: extint0_0+3A4↑j
                mov     RAM_22, #0x32 ; '2'
                mov     R6, #0xDA
                lcall   code_4E6
                ljmp    code_54C
; ---------------------------------------------------------------------------

code_41C:                               ; CODE XREF: extint0_0+3B1↑j
                clr     RAM_28.2
                orl     RAM_37, #0x40

code_421:                               ; CODE XREF: extint0_0+3BB↑j
                mov     A, RAM_64
                cjne    A, #0, code_42B
                mov     RAM_26, A
                ljmp    code_54C
; ---------------------------------------------------------------------------

code_42B:                               ; CODE XREF: extint0_0+3D0↑j
                mov     R0, #0x26 ; '&'
                inc     @R0
                cjne    @R0, #3, code_4A4
                clr     A
                mov     @R0, A
                jb      RAM_2F.0, code_448
                setb    RAM_2F.0
                clr     RAM_28.4
                mov     A, RAM_38
                orl     A, #0x40
                mov     RAM_38, A
                acall   code_3A4

code_442:                               ; CODE XREF: extint0_0+405↓j
                mov     RAM_64, #8
                ljmp    code_54C
; ---------------------------------------------------------------------------

code_448:                               ; CODE XREF: extint0_0+3E0↑j
                clr     RAM_2F.0
                setb    RAM_28.4
                mov     RAM_3A, #5
                lcall   code_D64
                mov     A, RAM_38
                anl     A, #0xBF
                mov     RAM_38, A
                ajmp    code_442
; ---------------------------------------------------------------------------

code_45A:                               ; CODE XREF: extint0_0+3AA↑j
                ljmp    code_52F
; ---------------------------------------------------------------------------

code_45D:                               ; CODE XREF: extint0_0+3AF↑j
                mov     A, R6
                anl     A, #0x10
                jz      code_46F
                jb      RAM_28.0, code_46A
                setb    RAM_28.0
                ljmp    code_54C
; ---------------------------------------------------------------------------

code_46A:                               ; CODE XREF: extint0_0+40F↑j
                clr     RAM_28.0
                ljmp    code_54C
; ---------------------------------------------------------------------------

code_46F:                               ; CODE XREF: extint0_0+40D↑j
                setb    RAM_28.7
                jb      RAM_28.6, code_479
                mov     A, RAM_2B
                cjne    A, #0, code_48D

code_479:                               ; CODE XREF: extint0_0+41E↑j
                mov     DPTR, #0x48 ; 'H'
                lcall   code_66D
                nop
                nop
                nop
                mov     R0, #0xA0
                lcall   code_E04
                lcall   code_F43
                ljmp    code_4A7
; ---------------------------------------------------------------------------

code_48D:                               ; CODE XREF: extint0_0+423↑j
                clr     RAM_28.7
                mov     RAM_22, #0x32 ; '2'
                mov     R6, #0xDA
                lcall   code_4E6
                ljmp    code_4A7
; END OF FUNCTION CHUNK FOR extint0_0
; ---------------------------------------------------------------------------
                clr     RAM_28.7
                mov     R0, #0xA0
                lcall   code_D58
                jb      RAM_28.6, code_4A7
; START OF FUNCTION CHUNK FOR extint0_0

code_4A4:                               ; CODE XREF: extint0_0+3DB↑j
                                        ; extint0_0+461↓j
                ljmp    code_54C
; ---------------------------------------------------------------------------

code_4A7:                               ; CODE XREF: extint0_0+437↑j
                                        ; extint0_0+444↑j ...
                mov     A, RAM_64
                cjne    A, #0, code_4B1
                mov     RAM_65, A
                ljmp    code_54C
; ---------------------------------------------------------------------------

code_4B1:                               ; CODE XREF: extint0_0+456↑j
                mov     R0, #0x65 ; 'e'
                inc     @R0
                cjne    @R0, #3, code_4A4
                clr     A
                mov     @R0, A
                jb      RAM_28.6, code_4DD
                setb    RAM_28.6
                mov     RAM_66, RAM_2B
                mov     A, RAM_2A
                cjne    A, #0, code_4E4
                mov     A, RAM_2B
                cjne    A, #0, code_4DA

code_4CB:                               ; CODE XREF: extint0_0:code_4E4↓j
                mov     RAM_2B, #1

code_4CE:                               ; CODE XREF: extint0_0+48F↓j
                lcall   code_D29
                lcall   code_EF2
                mov     RAM_64, #8
                ljmp    code_BD2
; ---------------------------------------------------------------------------

code_4DA:                               ; CODE XREF: extint0_0+475↑j
                ljmp    code_54C
; ---------------------------------------------------------------------------

code_4DD:                               ; CODE XREF: extint0_0+466↑j
                clr     RAM_28.6
                mov     RAM_2B, RAM_66
                ajmp    code_4CE
; ---------------------------------------------------------------------------

code_4E4:                               ; CODE XREF: extint0_0+470↑j
                ajmp    code_4CB
; END OF FUNCTION CHUNK FOR extint0_0

; =============== S U B R O U T I N E =======================================


code_4E6:                               ; CODE XREF: extint0_0+3C3↑p
                                        ; extint0_0+441↑p ...
                lcall   code_D29
                jb      RAM_28.0, code_502
                mov     R0, #0x33 ; '3'
                mov     @R0, #0xF2
                dec     R0
                mov     @R0, #0x42 ; 'B'
                dec     R0
                mov     @R0, #0x42 ; 'B'
                dec     R0

code_4F7:                               ; CODE XREF: code_4E6+27↓j
                mov     A, R6
                mov     @R0, A
                acall   code_3A1
                lcall   code_569
                lcall   code_527
                ret
; ---------------------------------------------------------------------------

code_502:                               ; CODE XREF: code_4E6+3↑j
                mov     R0, #0x30 ; '0'
                mov     @R0, #0x9E
                inc     R0
                mov     @R0, #0xA
                inc     R0
                mov     @R0, #0xA
                inc     R0
                ajmp    code_4F7
; End of function code_4E6

; ---------------------------------------------------------------------------
                mov     R7, #0
                lcall   code_113B
                clr     P1.0            ; Port 1
                clr     RAM_28.5
                ret

; =============== S U B R O U T I N E =======================================


code_519:                               ; CODE XREF: code_527↓p
                mov     A, T2CON        ; Timer 2 Control
                orl     A, #4
                mov     T2CON, A        ; Timer 2 Control
                ret
; End of function code_519


; =============== S U B R O U T I N E =======================================


code_520:                               ; CODE XREF: code_527+5↓p
                mov     A, T2CON        ; Timer 2 Control
                anl     A, #0xFB
                mov     T2CON, A        ; Timer 2 Control
                ret
; End of function code_520


; =============== S U B R O U T I N E =======================================


code_527:                               ; CODE XREF: extint0_0+19A↑p
                                        ; code_4E6+18↑p ...
                acall   code_519
                lcall   code_572
                acall   code_520
                ret
; End of function code_527

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR extint0_0

code_52F:                               ; CODE XREF: extint0_0:code_45A↑j
                                        ; extint0_0:code_55E↓j
                clr     RAM_28.3
                clr     RAM_28.7
                mov     A, RAM_2A
                jnz     code_553
                inc     A
                mov     RAM_2A, A
                mov     RAM_2B, #1

code_53D:                               ; CODE XREF: extint0_0+509↓j
                                        ; extint0_0+514↓j
                lcall   code_D79
                lcall   code_D29
                mov     R0, #0xA0
                lcall   code_D58
                clr     A
                mov     R2, A
                acall   code_2BD

code_54C:                               ; CODE XREF: extint0_0+3C6↑j
                                        ; extint0_0+3D5↑j ...
                acall   code_527
                mov     RAM_64, #8
                ajmp    code_126
; ---------------------------------------------------------------------------

code_553:                               ; CODE XREF: extint0_0+4E2↑j
                cjne    A, #1, code_55E
                inc     A
                mov     RAM_2A, A
                mov     RAM_2B, #1
                ajmp    code_53D
; ---------------------------------------------------------------------------

code_55E:                               ; CODE XREF: extint0_0:code_553↑j
                cjne    A, #2, code_52F
                mov     RAM_2A, #0
                mov     RAM_2B, #2
                ajmp    code_53D
; END OF FUNCTION CHUNK FOR extint0_0

; =============== S U B R O U T I N E =======================================


code_569:                               ; CODE XREF: extint0_0+37D↑p
                                        ; code_4E6+15↑p ...
                mov     R6, #0x64 ; 'd'

code_56B:                               ; CODE XREF: code_569+6↓j
                mov     R5, #0xE5

code_56D:                               ; CODE XREF: code_569:code_56D↓j
                djnz    R5, code_56D
                djnz    R6, code_56B
                ret
; End of function code_569


; =============== S U B R O U T I N E =======================================


code_572:                               ; CODE XREF: code_527+2↑p
                mov     R6, #0xC8

code_574:                               ; CODE XREF: code_572+6↓j
                mov     R5, #0xFF

code_576:                               ; CODE XREF: code_572:code_576↓j
                djnz    R5, code_576
                djnz    R6, code_574
                ret
; End of function code_572

; ---------------------------------------------------------------------------
                .byte 0xFF;(array 5)
; ---------------------------------------------------------------------------
                mov     R2, #0xA
                sjmp    code_586

; =============== S U B R O U T I N E =======================================


code_584:                               ; CODE XREF: code:05CB↓p
                mov     R2, #4
; End of function code_584


; =============== S U B R O U T I N E =======================================


code_586:                               ; CODE XREF: code:0582↑j
                                        ; code:058E↓p
                clr     A

code_587:                               ; CODE XREF: code_586+3↓j
                mov     @R0, A
                inc     R0
                djnz    R2, code_587
                ret
; End of function code_586

; ---------------------------------------------------------------------------
                mov     R2, #5
                acall   code_586
                dec     R0
                mov     RAM_4, R0
                mov     RAM_5, R1
                mov     R3, #0x20 ; ' '

code_597:                               ; CODE XREF: code:05B2↓j
                mov     R1, RAM_5
                mov     R2, #4

code_59B:                               ; CODE XREF: code:059F↓j
                mov     A, @R1
                rlc     A
                mov     @R1, A
                dec     R1
                djnz    R2, code_59B
                mov     R1, RAM_5
                mov     A, @R1
                mov     ACC0, C         ; Accumulator
                mov     @R1, A
                mov     R0, RAM_4
                mov     R2, #5

code_5AB:                               ; CODE XREF: code:05B0↓j
                mov     A, @R0
                addc    A, @R0
                da      A
                mov     @R0, A
                dec     R0
                djnz    R2, code_5AB
                djnz    R3, code_597
                mov     A, R0
                add     A, #0xA
                mov     R0, A
                mov     R1, RAM_4
                mov     R2, #5

code_5BC:                               ; CODE XREF: code:05C8↓j
                mov     A, @R1
                anl     A, #0xF
                mov     @R0, A
                dec     R0
                mov     A, @R1
                swap    A
                anl     A, #0xF
                mov     @R0, A
                dec     R0
                dec     R1
                djnz    R2, code_5BC
                ret
; ---------------------------------------------------------------------------
                acall   code_584
                dec     R0
                mov     RAM_4, R0
                mov     RAM_5, R1
                mov     DPTR, #0x5F5
                mov     R3, #0x20 ; ' '

code_5D7:                               ; CODE XREF: code:05F2↓j
                clr     C
                mov     R1, RAM_5
                mov     R2, #0xA

code_5DC:                               ; CODE XREF: code:05E6↓j
                mov     A, @R1
                anl     A, #0xF
                mov     ACC4, C         ; Accumulator
                movc    A, @A+DPTR
                mov     @R1, A
                mov     C, ACC7         ; Accumulator
                inc     R1
                djnz    R2, code_5DC
                mov     R0, RAM_4
                mov     R2, #4

code_5EC:                               ; CODE XREF: code:05F0↓j
                mov     A, @R0
                rrc     A
                mov     @R0, A
                dec     R0
                djnz    R2, code_5EC
                djnz    R3, code_5D7
                ret
; ---------------------------------------------------------------------------
                nop
                sjmp    code_5F9
; ---------------------------------------------------------------------------
                .byte 0x81
; ---------------------------------------------------------------------------

code_5F9:                               ; CODE XREF: code:05F6↑j
                ljmp    0x8203
; ---------------------------------------------------------------------------
                .byte 0x83
                .byte 4, 0x84, 0, 0, 0, 0, 0, 0, 5, 0x85, 6, 0x86, 7, 0x87
                .byte 8, 0x88, 9, 0x89

; =============== S U B R O U T I N E =======================================


code_60F:                               ; CODE XREF: code_E37+2↓p
                                        ; extint0_0+1131↓p ...
                clr     C
                mov     A, R2
                subb    A, RAM_8
                jnz     code_624
                mov     A, R3
                subb    A, RAM_9
                jnz     code_622
                mov     A, R4
                subb    A, RAM_A
                jnz     code_622
                mov     A, R5
                subb    A, RAM_B

code_622:                               ; CODE XREF: code_60F+9↑j
                                        ; code_60F+E↑j
                clr     PSW.2           ; Program Status Word

code_624:                               ; CODE XREF: code_60F+4↑j
                ret
; End of function code_60F


; =============== S U B R O U T I N E =======================================


code_625:                               ; CODE XREF: extint0_0+11BE↓p
                                        ; extint0_0+11D6↓p ...
                mov     A, DP0H         ; Data Pointer High Byte
                jz      code_639
                clr     A
                movc    A, @A+DPTR
                mov     R2, A
                mov     A, #1
                movc    A, @A+DPTR
                mov     R3, A
                mov     A, #2
                movc    A, @A+DPTR
                mov     R4, A
                mov     A, #3
                movc    A, @A+DPTR
                mov     R5, A
                ret
; ---------------------------------------------------------------------------

code_639:                               ; CODE XREF: code_625+2↑j
                mov     R0, DP0L        ; Data Pointer Low Byte
                mov     A, @R0
                mov     R2, A
                inc     R0
                mov     A, @R0
                mov     R3, A
                inc     R0
                mov     A, @R0
                mov     R4, A
                inc     R0
                mov     A, @R0
                mov     R5, A
                ret
; End of function code_625


; =============== S U B R O U T I N E =======================================


code_647:                               ; CODE XREF: extint0_0+80D↓p
                                        ; extint0_0+81E↓p ...
                mov     A, DP0H         ; Data Pointer High Byte
                jz      code_65F
                clr     A
                movc    A, @A+DPTR
                mov     RAM_8, A
                mov     A, #1
                movc    A, @A+DPTR
                mov     RAM_9, A
                mov     A, #2
                movc    A, @A+DPTR
                mov     RAM_A, A
                mov     A, #3
                movc    A, @A+DPTR
                mov     RAM_B, A
                ret
; ---------------------------------------------------------------------------

code_65F:                               ; CODE XREF: code_647+2↑j
                mov     R0, DP0L        ; Data Pointer Low Byte
                mov     RAM_8, @R0
                inc     R0
                mov     RAM_9, @R0
                inc     R0
                mov     RAM_A, @R0
                inc     R0
                mov     RAM_B, @R0
                ret
; End of function code_647


; =============== S U B R O U T I N E =======================================


code_66D:                               ; CODE XREF: extint0_0+429↑p
                                        ; extint0_0+7E7↓p ...
                mov     A, DP0H         ; Data Pointer High Byte
                jz      code_685
                push    DP0L            ; Data Pointer Low Byte
                push    DP0H            ; Data Pointer High Byte
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                inc     DPTR
                movx    A, @DPTR
                mov     R4, A
                inc     DPTR
                movx    A, @DPTR
                mov     R5, A
                pop     DP0H            ; Data Pointer High Byte
                pop     DP0L            ; Data Pointer Low Byte
                ret
; ---------------------------------------------------------------------------

code_685:                               ; CODE XREF: code_66D+2↑j
                mov     R0, DP0L        ; Data Pointer Low Byte
                mov     A, @R0
                mov     R2, A
                inc     R0
                mov     A, @R0
                mov     R3, A
                inc     R0
                mov     A, @R0
                mov     R4, A
                inc     R0
                mov     A, @R0
                mov     R5, A
                ret
; End of function code_66D


; =============== S U B R O U T I N E =======================================


code_693:                               ; CODE XREF: extint0_0+7F0↓p
                                        ; extint0_0+98E↓p ...
                mov     A, DP0H         ; Data Pointer High Byte
                jz      code_6A7
                movx    A, @DPTR
                mov     RAM_8, A
                inc     DPTR
                movx    A, @DPTR
                mov     RAM_9, A
                inc     DPTR
                movx    A, @DPTR
                mov     RAM_A, A
                inc     DPTR
                movx    A, @DPTR
                mov     RAM_B, A
                ret
; ---------------------------------------------------------------------------

code_6A7:                               ; CODE XREF: code_693+2↑j
                mov     R0, DP0L        ; Data Pointer Low Byte
                mov     RAM_8, @R0
                inc     R0
                mov     RAM_9, @R0
                inc     R0
                mov     RAM_A, @R0
                inc     R0
                mov     RAM_B, @R0
                ret
; End of function code_693


; =============== S U B R O U T I N E =======================================


code_6B5:                               ; CODE XREF: code_E51+2↓p
                                        ; extint0_0:code_1339↓p ...
                clr     A
                mov     R0, A
                mov     RAM_C, A
                mov     RAM_D, A
                mov     RAM_E, A
                mov     RAM_F, A
                mov     A, R5
                orl     A, R4
                orl     A, R3
                orl     A, R2
                jz      code_6D0
                mov     A, RAM_8
                orl     A, RAM_9
                orl     A, RAM_A
                orl     A, RAM_B
                jnz     code_706
                ret
; ---------------------------------------------------------------------------

code_6D0:                               ; CODE XREF: code_6B5+E↑j
                ljmp    code_769
; ---------------------------------------------------------------------------

code_6D3:                               ; CODE XREF: code_6B5+54↓j
                mov     A, R2
                clr     C
                subb    A, RAM_8
                jc      code_70C
                jnz     code_6EE
                mov     A, R3
                subb    A, RAM_9
                jc      code_70C
                jnz     code_6EE
                mov     A, R4
                subb    A, RAM_A
                jc      code_70C
                jnz     code_6EE
                mov     A, R5
                subb    A, RAM_B
                jc      code_70C

code_6EE:                               ; CODE XREF: code_6B5+24↑j
                                        ; code_6B5+2B↑j ...
                mov     A, RAM_B
                add     A, RAM_B
                mov     RAM_B, A
                mov     A, RAM_A
                addc    A, RAM_A
                mov     RAM_A, A
                mov     A, RAM_9
                addc    A, RAM_9
                mov     RAM_9, A
                mov     A, RAM_8
                addc    A, RAM_8
                mov     RAM_8, A

code_706:                               ; CODE XREF: code_6B5+18↑j
                inc     R0
                mov     A, RAM_8
                jnb     ACC7, code_6D3  ; Accumulator

code_70C:                               ; CODE XREF: code_6B5+22↑j
                                        ; code_6B5+29↑j ...
                mov     A, RAM_8
                clr     C
                subb    A, R2
                jc      code_72C
                jnz     code_729
                mov     A, RAM_9
                subb    A, R3
                jc      code_72C
                jnz     code_729
                mov     A, RAM_A
                subb    A, R4
                jc      code_72C
                jnz     code_729
                mov     A, RAM_B
                subb    A, R5
                jc      code_72C
                jz      code_72C

code_729:                               ; CODE XREF: code_6B5+5D↑j
                                        ; code_6B5+64↑j ...
                clr     C
                sjmp    code_73E
; ---------------------------------------------------------------------------

code_72C:                               ; CODE XREF: code_6B5+5B↑j
                                        ; code_6B5+62↑j ...
                clr     C
                mov     A, R5
                subb    A, RAM_B
                mov     R5, A
                mov     A, R4
                subb    A, RAM_A
                mov     R4, A
                mov     A, R3
                subb    A, RAM_9
                mov     R3, A
                mov     A, R2
                subb    A, RAM_8
                mov     R2, A
                setb    C

code_73E:                               ; CODE XREF: code_6B5+75↑j
                mov     A, RAM_F
                rlc     A
                mov     RAM_F, A
                mov     A, RAM_E
                rlc     A
                mov     RAM_E, A
                mov     A, RAM_D
                rlc     A
                mov     RAM_D, A
                mov     A, RAM_C
                rlc     A
                mov     RAM_C, A
                mov     A, RAM_8
                clr     C
                rrc     A
                mov     RAM_8, A
                mov     A, RAM_9
                rrc     A
                mov     RAM_9, A
                mov     A, RAM_A
                rrc     A
                mov     RAM_A, A
                mov     A, RAM_B
                rrc     A
                mov     RAM_B, A
                djnz    R0, code_70C

code_769:                               ; CODE XREF: code_6B5:code_6D0↑j
                mov     RAM_B, R5
                mov     RAM_A, R4
                mov     RAM_9, R3
                mov     RAM_8, R2
                mov     R5, RAM_F
                mov     R4, RAM_E
                mov     R3, RAM_D
                mov     R2, RAM_C
                ret
; End of function code_6B5


; =============== S U B R O U T I N E =======================================


code_77A:                               ; CODE XREF: code_E46+2↓p
                                        ; extint0_0+13B0↓p
                mov     A, R5
                mov     B, RAM_B        ; B Register
                mul     AB
                mov     RAM_F, A
                mov     RAM_E, B        ; B Register
                mov     A, R5
                mov     B, RAM_A        ; B Register
                mul     AB
                add     A, RAM_E
                mov     RAM_E, A
                mov     A, B            ; B Register
                addc    A, #0
                mov     RAM_D, A
                mov     A, R5
                mov     B, RAM_9        ; B Register
                mul     AB
                add     A, RAM_D
                mov     RAM_D, A
                mov     A, B            ; B Register
                addc    A, #0
                mov     RAM_C, A
                mov     A, R5
                mov     B, RAM_8        ; B Register
                mul     AB
                add     A, RAM_C
                mov     RAM_C, A
                mov     A, R4
                mov     B, RAM_B        ; B Register
                mul     AB
                add     A, RAM_E
                mov     RAM_E, A
                mov     A, B            ; B Register
                addc    A, RAM_D
                mov     RAM_D, A
                mov     A, RAM_C
                addc    A, #0
                mov     RAM_C, A
                mov     A, R4
                mov     B, RAM_A        ; B Register
                mul     AB
                add     A, RAM_D
                mov     RAM_D, A
                mov     A, B            ; B Register
                addc    A, RAM_C
                mov     RAM_C, A
                mov     A, R4
                mov     B, RAM_9        ; B Register
                mul     AB
                add     A, RAM_C
                mov     RAM_C, A
                mov     A, R3
                mov     B, RAM_B        ; B Register
                mul     AB
                add     A, RAM_D
                mov     RAM_D, A
                mov     A, B            ; B Register
                addc    A, RAM_C
                mov     RAM_C, A
                mov     A, R3
                mov     B, RAM_A        ; B Register
                mul     AB
                add     A, RAM_C
                mov     RAM_C, A
                mov     A, R2
                mov     B, RAM_B        ; B Register
                mul     AB
                add     A, RAM_C
                mov     R2, A
                mov     R3, RAM_D
                mov     R4, RAM_E
                mov     R5, RAM_F
                ret
; End of function code_77A


; =============== S U B R O U T I N E =======================================


code_7FF:                               ; CODE XREF: extint0_0+7F6↓p
                                        ; extint0_0+991↓p ...
                mov     A, R5
                clr     C
                subb    A, RAM_B
                mov     R5, A
                mov     A, R4
                subb    A, RAM_A
                mov     R4, A
                mov     A, R3
                subb    A, RAM_9
                mov     R3, A
                mov     A, R2
                subb    A, RAM_8
                mov     R2, A
                ret
; End of function code_7FF


; =============== S U B R O U T I N E =======================================


code_811:                               ; CODE XREF: extint0_0+855↓p
                                        ; extint0_0+85A↓p ...
                clr     C
                mov     A, R5
                add     A, @R0
                mov     R5, A
                dec     R0
                mov     A, R4
                addc    A, @R0
                mov     R4, A
                dec     R0
                mov     A, R3
                addc    A, @R0
                mov     R3, A
                dec     R0
                mov     A, R2
                addc    A, @R0
                mov     R2, A
                ret
; End of function code_811

; ---------------------------------------------------------------------------
                .byte 0xFF;(array 0xE)
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR extint0_0

code_830:                               ; CODE XREF: extint0_0+813↓j
                                        ; extint0_0+824↓j
                ljmp    code_BC1
; ---------------------------------------------------------------------------

code_833:                               ; CODE XREF: extint0_0+184↑j
                setb    P01             ; Port 0
                clr     RAM_28.5
                mov     DPTR, #0x55 ; 'U'
                lcall   code_66D
                nop
                nop
                nop
                mov     DPTR, #0x51 ; 'Q'
                lcall   code_693
                nop
                nop
                nop
                lcall   code_7FF
                nop
                nop
                nop
                mov     R0, #0x40 ; '@'
                lcall   code_E04
                nop
                nop
                nop
                mov     DPTR, #0x51 ; 'Q'
                lcall   code_66D
                mov     DPTR, #0xEEA
                lcall   code_647
                lcall   code_E37
                jnc     code_830
                mov     DPTR, #0x55 ; 'U'
                lcall   code_66D
                mov     DPTR, #0xEEA
                lcall   code_647
                lcall   code_E37
                jnc     code_830
                jb      RAM_2F.0, code_8F3

code_87C:                               ; CODE XREF: extint0_0+8C3↓j
                mov     R0, #0x8C
                mov     R1, #0x90
                lcall   code_EC5
                mov     R0, #0x88
                mov     R1, #0x8C
                lcall   code_EC5
                mov     R0, #0x84
                mov     R1, #0x88
                lcall   code_EC5
                mov     R0, #0x80
                mov     R1, #0x84
                lcall   code_EC5
                mov     DPTR, #0x40 ; '@'
                lcall   code_66D
                mov     R0, #0x80
                lcall   code_E04
                nop
                nop
                nop
                mov     R0, #0x87
                lcall   code_811
                mov     R0, #0x8B
                lcall   code_811
                mov     R0, #0x8F
                lcall   code_811
                mov     R0, #0x93
                lcall   code_811
                jb      RAM_2F.0, code_918

code_8BD:                               ; CODE XREF: extint0_0+8DE↓j
                jb      RAM_28.4, code_8D4
                mov     R0, #0x3A ; ':'
                inc     @R0
                jb      RAM_2F.0, code_8D9
                cjne    @R0, #5, code_8E7
                setb    RAM_28.4

code_8CB:                               ; CODE XREF: extint0_0+884↓j
                mov     DPTR, #0xECE
                lcall   code_647
                ljmp    code_933
; ---------------------------------------------------------------------------

code_8D4:                               ; CODE XREF: extint0_0:code_8BD↑j
                jb      RAM_2F.0, code_8DE
                ajmp    code_8CB
; ---------------------------------------------------------------------------

code_8D9:                               ; CODE XREF: extint0_0+870↑j
                cjne    @R0, #0xA, code_8E7
                setb    RAM_28.4

code_8DE:                               ; CODE XREF: extint0_0:code_8D4↑j
                mov     DPTR, #0xED2
                lcall   code_647
                ljmp    code_933
; ---------------------------------------------------------------------------

code_8E7:                               ; CODE XREF: extint0_0+873↑j
                                        ; extint0_0:code_8D9↑j
                mov     RAM_B, RAM_3A
                clr     A
                mov     RAM_A, A
                mov     RAM_9, A
                mov     RAM_8, A
                ajmp    code_933
; ---------------------------------------------------------------------------

code_8F3:                               ; CODE XREF: extint0_0+826↑j
                mov     R0, #0xE4
                mov     R1, #0xE8
                lcall   code_EC5
                mov     R0, #0xE0
                mov     R1, #0xE4
                lcall   code_EC5
                mov     R0, #0x98
                mov     R1, #0xE0
                lcall   code_EC5
                mov     R0, #0x94
                mov     R1, #0x98
                lcall   code_EC5
                mov     R0, #0x90
                mov     R1, #0x94
                lcall   code_EC5
                ajmp    code_87C
; ---------------------------------------------------------------------------

code_918:                               ; CODE XREF: extint0_0+867↑j
                mov     R0, #0x97
                lcall   code_811
                mov     R0, #0x9B
                lcall   code_811
                mov     R0, #0xE3
                lcall   code_811
                mov     R0, #0xE7
                lcall   code_811
                mov     R0, #0xEB
                lcall   code_811
                ajmp    code_8BD
; ---------------------------------------------------------------------------

code_933:                               ; CODE XREF: extint0_0+87E↑j
                                        ; extint0_0+891↑j ...
                lcall   code_E51
                nop
                nop
                nop
                mov     R0, #0x3C ; '<'
                lcall   code_E04
                mov     A, RAM_2A
                jz      code_94A
                jnb     P00, code_987   ; Port 0
                clr     RAM_28.1
                ljmp    code_989
; ---------------------------------------------------------------------------

code_94A:                               ; CODE XREF: extint0_0+8ED↑j
                ljmp    code_A2A
; ---------------------------------------------------------------------------

code_94D:                               ; CODE XREF: extint0_0+93B↓j
                mov     DPTR, #0x3C ; '<'
                lcall   code_66D
                mov     R0, #0xBC
                lcall   code_129B
                nop
                nop
                nop
                lcall   code_E46
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_E51
                nop
                nop
                nop
                mov     DPTR, #0xACD
                lcall   code_647
                lcall   code_E46
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_E51
                mov     R0, #0x3C ; '<'
                lcall   code_E04
                ljmp    code_9D9
; ---------------------------------------------------------------------------

code_984:                               ; CODE XREF: extint0_0:code_989↓j
                ljmp    code_C6C
; ---------------------------------------------------------------------------

code_987:                               ; CODE XREF: extint0_0+8EF↑j
                setb    RAM_28.1

code_989:                               ; CODE XREF: extint0_0+8F4↑j
                cjne    A, #1, code_984
                mov     A, RAM_2B
                jz      code_94D
                mov     DPTR, #0x3C ; '<'
                lcall   code_66D
                mov     R0, #0xB4
                lcall   code_129B
                nop
                nop
                nop
                lcall   code_E46
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_E51
                nop
                nop
                nop
                mov     R0, #0xBC
                lcall   code_129B
                nop
                nop
                nop
                lcall   code_E46
                nop
                nop
                nop
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_E51
                nop
                nop
                nop
                mov     DPTR, #0xACD
                lcall   code_647
                lcall   code_E46
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_E51

code_9D9:                               ; CODE XREF: extint0_0+92E↑j
                mov     R0, #0x48 ; 'H'
                lcall   code_E04
                mov     DPTR, #0xA0
                lcall   code_693
                lcall   code_7FF
                nop
                nop
                nop
                mov     R0, #0x3C ; '<'
                lcall   code_E04
                nop
                nop
                nop
                mov     DPTR, #0xEDE
                lcall   code_647
                lcall   code_E37
                jnc     code_A15
                mov     DPTR, #0xEE6
                lcall   code_647
                lcall   code_E37
                jnc     code_A0F
                mov     A, RAM_2B
                jz      code_A0F
                ljmp    code_BA7
; ---------------------------------------------------------------------------

code_A0F:                               ; CODE XREF: extint0_0+9B3↑j
                                        ; extint0_0+9B7↑j ...
                ljmp    code_B47
; ---------------------------------------------------------------------------

code_A12:                               ; CODE XREF: extint0_0+9C4↓j
                ljmp    code_C10
; ---------------------------------------------------------------------------

code_A15:                               ; CODE XREF: extint0_0+9A8↑j
                mov     A, RAM_2B
                jz      code_A12
                mov     DPTR, #0xEEA
                lcall   code_647
                lcall   code_E37
                jc      code_A0F
                lcall   code_1121
                ljmp    code_1E1
; ---------------------------------------------------------------------------

code_A2A:                               ; CODE XREF: extint0_0:code_94A↑j
                jb      P00, code_A87   ; Port 0
                setb    RAM_28.1
                mov     A, RAM_2B
                jz      code_A67
                mov     DPTR, #0x3C ; '<'
                lcall   code_66D
                mov     R0, #0xB0
                lcall   code_129B
                nop
                nop
                nop
                lcall   code_E46
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_E51
                nop
                nop
                nop
                mov     R0, #0xB4
                lcall   code_129B
                nop
                nop
                nop
                lcall   code_E46
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_E51
                ljmp    code_AF7
; ---------------------------------------------------------------------------

code_A67:                               ; CODE XREF: extint0_0+9DE↑j
                mov     DPTR, #0x3C ; '<'
                lcall   code_66D
                mov     R0, #0xB0
                lcall   code_129B
                nop
                nop
                nop
                lcall   code_E46
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_E51
                nop
                nop
                nop
                ljmp    code_AF7
; ---------------------------------------------------------------------------

code_A87:                               ; CODE XREF: extint0_0:code_A2A↑j
                clr     RAM_28.1
                mov     A, RAM_2B
                jz      code_AD1
                mov     DPTR, #0x3C ; '<'
                lcall   code_66D
                mov     DPTR, #0xEBD
                lcall   code_647
                lcall   code_E46
                mov     R0, #0xB4
                lcall   code_129B
                nop
                nop
                nop
                lcall   code_E46
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_E51
                nop
                nop
                nop
                mov     R0, #0xB8
                lcall   code_129B
                nop
                nop
                nop
                lcall   code_E46
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_E51
                nop
                nop
                nop
                ljmp    code_AF7
; END OF FUNCTION CHUNK FOR extint0_0
; ---------------------------------------------------------------------------
                nop
                nop
                inc     FSR_DC
; START OF FUNCTION CHUNK FOR extint0_0

code_AD1:                               ; CODE XREF: extint0_0+A38↑j
                mov     DPTR, #0x3C ; '<'
                lcall   code_66D
                mov     DPTR, #0xEBD
                lcall   code_647
                lcall   code_E46
                mov     R0, #0xB8
                lcall   code_129B
                nop
                nop
                nop
                lcall   code_E46
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_E51
                nop
                nop
                nop

code_AF7:                               ; CODE XREF: extint0_0+A11↑j
                                        ; extint0_0+A31↑j ...
                mov     R0, #0x48 ; 'H'
                lcall   code_E04
                mov     DPTR, #0xA0
                lcall   code_693
                nop
                nop
                nop
                lcall   code_7FF
                mov     R0, #0x3C ; '<'
                lcall   code_E04
                nop
                nop
                nop
                mov     A, RAM_2B
                cjne    A, #2, code_B23
                mov     DPTR, #0xECE
                lcall   code_647
                lcall   code_E51
                mov     R0, #0x3C ; '<'
                lcall   code_E04

code_B23:                               ; CODE XREF: extint0_0+ABF↑j
                nop
                nop
                nop
                mov     DPTR, #0xEDE
                lcall   code_647
                lcall   code_E37
                jnc     code_B7F
                mov     DPTR, #0xEEE
                lcall   code_647
                lcall   code_E37
                jnc     code_B77

code_B3C:                               ; CODE XREF: extint0_0+B26↓j
                mov     DPTR, #0xEE6
                lcall   code_647
                lcall   code_E37
                jc      code_BA0

code_B47:                               ; CODE XREF: extint0_0:code_A0F↑j
                                        ; extint0_0+B48↓j ...
                jb      RAM_28.2, code_B53

code_B4A:                               ; CODE XREF: extint0_0:code_BA7↓j
                lcall   code_E25
                mov     A, R5
                mov     R2, RAM_4
                lcall   code_2BD

code_B53:                               ; CODE XREF: extint0_0:code_B47↑j
                jnb     RAM_27.3, code_B62
                jnb     RAM_28.5, code_B6F

code_B59:                               ; CODE XREF: extint0_0:code_B6F↓j
                lcall   code_17C5

code_B5C:                               ; CODE XREF: extint0_0+B1A↓j
                                        ; extint0_0+B22↓j
                lcall   code_15C3

code_B5F:                               ; CODE XREF: extint0_0:code_B62↓j
                ljmp    code_1E1
; ---------------------------------------------------------------------------

code_B62:                               ; CODE XREF: extint0_0:code_B53↑j
                jnb     RAM_27.4, code_B5F
                clr     RAM_27.4
                lcall   code_17D0
                mov     RAM_22, #0
                ajmp    code_B5C
; ---------------------------------------------------------------------------

code_B6F:                               ; CODE XREF: extint0_0+B03↑j
                jb      RAM_27.4, code_B59
                lcall   code_16EB
                ajmp    code_B5C
; ---------------------------------------------------------------------------

code_B77:                               ; CODE XREF: extint0_0+AE7↑j
                mov     A, RAM_2B
                cjne    A, #2, code_B3C
                ljmp    code_BFE
; ---------------------------------------------------------------------------

code_B7F:                               ; CODE XREF: extint0_0+ADC↑j
                jb      RAM_28.1, code_B8D
                mov     A, RAM_2B
                cjne    A, #2, code_B8A
                ljmp    code_BFE
; ---------------------------------------------------------------------------

code_B8A:                               ; CODE XREF: extint0_0+B31↑j
                                        ; extint0_0+B3C↓j
                ljmp    code_C10
; ---------------------------------------------------------------------------

code_B8D:                               ; CODE XREF: extint0_0:code_B7F↑j
                mov     A, RAM_2B
                cjne    A, #1, code_B8A
                mov     DPTR, #0xEEA
                lcall   code_647
                lcall   code_E37
                jc      code_B47
                ljmp    code_BFE
; ---------------------------------------------------------------------------

code_BA0:                               ; CODE XREF: extint0_0+AF2↑j
                mov     A, RAM_2B
                jz      code_B47
                cjne    A, #1, code_BAA

code_BA7:                               ; CODE XREF: extint0_0+9B9↑j
                                        ; extint0_0:code_D14↓j
                jb      RAM_28.6, code_B4A

code_BAA:                               ; CODE XREF: extint0_0+B51↑j
                mov     A, RAM_2B
                dec     A
                cjne    A, #0xFF, code_BB1
                clr     A

code_BB1:                               ; CODE XREF: extint0_0+B5A↑j
                mov     RAM_2B, A
                mov     R6, #0
                lcall   code_D79
                lcall   code_D29
                lcall   code_EF2
                ljmp    code_BD2
; ---------------------------------------------------------------------------

code_BC1:                               ; CODE XREF: extint0_0:code_830↑j
                mov     DPTR, #0x40 ; '@'
                lcall   code_66D
                mov     DPTR, #0xED6
                lcall   code_647
                lcall   code_E37
                jnc     code_BF5

code_BD2:                               ; CODE XREF: extint0_0+484↑j
                                        ; extint0_0+B6B↑j ...
                lcall   code_BD8
                ljmp    code_1E1
; END OF FUNCTION CHUNK FOR extint0_0

; =============== S U B R O U T I N E =======================================


code_BD8:                               ; CODE XREF: extint0_0:code_BD2↑p
                                        ; extint0_0+BAE↓p ...
                push    RAM_2A
                mov     RAM_2A, #3
                mov     R6, #1
                lcall   code_D79
                lcall   code_569
                nop
                nop
                nop
                mov     R6, #0
                lcall   code_D79
                pop     RAM_2A
                mov     R6, #0
                lcall   code_D79
                ret
; End of function code_BD8

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR extint0_0

code_BF5:                               ; CODE XREF: extint0_0+B7D↑j
                mov     A, RAM_2A
                jnz     code_C06
                mov     A, RAM_2B
                cjne    A, #2, code_C06

code_BFE:                               ; CODE XREF: extint0_0+B29↑j
                                        ; extint0_0+B34↑j ...
                lcall   code_1121
                acall   code_BD8
                ljmp    code_1E1
; ---------------------------------------------------------------------------

code_C06:                               ; CODE XREF: extint0_0+BA4↑j
                                        ; extint0_0+BA8↑j
                jnb     RAM_28.1, code_C10
                mov     A, RAM_2B
                cjne    A, #1, code_C10
                ajmp    code_BFE
; ---------------------------------------------------------------------------

code_C10:                               ; CODE XREF: extint0_0:code_A12↑j
                                        ; extint0_0:code_B8A↑j ...
                mov     R1, #0x2A ; '*'
                mov     R0, #0x2B ; '+'
                inc     @R0
                cjne    @R1, #0, code_C1E
                cjne    @R0, #3, code_C22
                dec     @R0
                ajmp    code_C22
; ---------------------------------------------------------------------------

code_C1E:                               ; CODE XREF: extint0_0+BC2↑j
                cjne    @R0, #2, code_C22
                dec     @R0

code_C22:                               ; CODE XREF: extint0_0+BC5↑j
                                        ; extint0_0+BC9↑j ...
                mov     R6, #0
                lcall   code_D79
                lcall   code_D29
                lcall   code_EF2
                ajmp    code_BD2
; ---------------------------------------------------------------------------

code_C2F:                               ; CODE XREF: extint0_0+C1B↓j
                mov     DPTR, #0x3C ; '<'
                lcall   code_66D
                mov     DPTR, #0xBC
                lcall   code_693
                nop
                nop
                nop
                lcall   code_E46
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_E51
                nop
                nop
                nop
                mov     DPTR, #0xC68
                lcall   code_647
                lcall   code_E46
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_E51
                nop
                nop
                nop
                ajmp    code_CB9
; END OF FUNCTION CHUNK FOR extint0_0
; ---------------------------------------------------------------------------
                nop
                nop
                rr      A
                mov     RAM_0, #0
                inc     RAM_2F
; START OF FUNCTION CHUNK FOR extint0_0

code_C6C:                               ; CODE XREF: extint0_0:code_984↑j
                mov     A, RAM_2B
                jz      code_C2F
                mov     DPTR, #0x3C ; '<'
                lcall   code_66D
                mov     R0, #0xB4
                lcall   code_129B
                nop
                nop
                nop
                lcall   code_E46
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_E51
                nop
                nop
                nop
                mov     R0, #0xBC
                lcall   code_129B
                nop
                nop
                nop
                lcall   code_E46
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_E51
                nop
                nop
                nop
                mov     DPTR, #0xC68
                lcall   code_647
                lcall   code_E46
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_E51
                nop
                nop
                nop

code_CB9:                               ; CODE XREF: extint0_0+C0F↑j
                mov     R0, #0x48 ; 'H'
                lcall   code_E04
                mov     DPTR, #0xA0
                lcall   code_693
                lcall   code_7FF
                nop
                nop
                nop
                mov     DPTR, #0xEDE
                lcall   code_647
                lcall   code_E37
                jnc     code_D16
                mov     DPTR, #0xEE6
                lcall   code_647
                lcall   code_E37
                jnc     code_CE4
                mov     A, RAM_2B
                jnz     code_D14

code_CE4:                               ; CODE XREF: extint0_0+C8B↑j
                                        ; extint0_0+CD0↓j
                jb      RAM_28.2, code_CF0
                lcall   code_E25
                mov     A, R5
                mov     R2, RAM_4
                lcall   code_2BD

code_CF0:                               ; CODE XREF: extint0_0:code_CE4↑j
                jnb     RAM_27.3, code_CFF
                jnb     RAM_28.5, code_D0C

code_CF6:                               ; CODE XREF: extint0_0:code_D0C↓j
                lcall   code_17C5

code_CF9:                               ; CODE XREF: extint0_0+CB7↓j
                                        ; extint0_0+CBF↓j
                lcall   code_15C3

code_CFC:                               ; CODE XREF: extint0_0:code_CFF↓j
                ljmp    code_1E1
; ---------------------------------------------------------------------------

code_CFF:                               ; CODE XREF: extint0_0:code_CF0↑j
                jnb     RAM_27.4, code_CFC
                clr     RAM_27.4
                lcall   code_17D0
                mov     RAM_22, #0
                ajmp    code_CF9
; ---------------------------------------------------------------------------

code_D0C:                               ; CODE XREF: extint0_0+CA0↑j
                jb      RAM_27.4, code_CF6
                lcall   code_16EB
                ajmp    code_CF9
; ---------------------------------------------------------------------------

code_D14:                               ; CODE XREF: extint0_0+C8F↑j
                ajmp    code_BA7
; ---------------------------------------------------------------------------

code_D16:                               ; CODE XREF: extint0_0+C80↑j
                mov     A, RAM_2B
                jz      code_D27
                mov     DPTR, #0xEEA
                lcall   code_647
                lcall   code_E37
                jc      code_CE4
                ajmp    code_BFE
; ---------------------------------------------------------------------------

code_D27:                               ; CODE XREF: extint0_0+CC5↑j
                ajmp    code_C10
; END OF FUNCTION CHUNK FOR extint0_0

; =============== S U B R O U T I N E =======================================


code_D29:                               ; CODE XREF: extint0_0+388↑p
                                        ; extint0_0:code_4CE↑p ...
                mov     R0, #0x80

code_D2B:                               ; CODE XREF: code_D29+5↓j
                clr     A
                mov     @R0, A
                inc     R0
                cjne    R0, #0x9C, code_D2B
                mov     RAM_3A, A
                mov     RAM_50, A
                clr     RAM_28.4
                mov     R0, #0xE0
                lcall   code_D58
                mov     R0, #0xE4
                lcall   code_D58
                mov     R0, #0xE8
                lcall   code_D58
                ret
; End of function code_D29

; ---------------------------------------------------------------------------
                mov     R0, #0x30 ; '0'

code_D49:                               ; CODE XREF: code:code_D54↓j
                clr     A
                mov     @R0, A
                inc     R0
                cjne    R0, #0x34, code_D54 ; '4'
                mov     A, @R0
                anl     A, #0xF0
                mov     @R0, A
                inc     R0

code_D54:                               ; CODE XREF: code:0D4C↑j
                cjne    R0, #0x39, code_D49 ; '9'
                ret

; =============== S U B R O U T I N E =======================================


code_D58:                               ; CODE XREF: code:049E↑p
                                        ; extint0_0+4F2↑p ...
                push    RAM_6
                clr     A
                mov     R6, #4

code_D5D:                               ; CODE XREF: code_D58+7↓j
                mov     @R0, A
                inc     R0
                djnz    R6, code_D5D
                pop     RAM_6
                ret
; End of function code_D58


; =============== S U B R O U T I N E =======================================


code_D64:                               ; CODE XREF: extint0_0+3FC↑p
                                        ; extint0_0+164D↓p
                mov     R0, #0x94
                acall   code_D58
                mov     R0, #0x98
                acall   code_D58
                mov     R0, #0xE0
                acall   code_D58
                mov     R0, #0xE4
                acall   code_D58
                mov     R0, #0xE8
                acall   code_D58
                ret
; End of function code_D64


; =============== S U B R O U T I N E =======================================


code_D79:                               ; CODE XREF: extint0_0+40↑p
                                        ; extint0_0+59↑p ...
                mov     DPTR, #0xDB3
                clr     C
                mov     A, RAM_2A
                subb    A, #3
                jnc     code_D9C
                mov     A, RAM_2A
                mov     B, #3           ; B Register
                mul     AB
                add     A, DP0L         ; Data Pointer Low Byte
                mov     DP0L, A         ; Data Pointer Low Byte
                mov     A, B            ; B Register
                addc    A, DP0H         ; Data Pointer High Byte
                mov     DP0H, A         ; Data Pointer High Byte
                mov     A, RAM_2B
                movc    A, @A+DPTR
                anl     P1, #0xC7       ; Port 1
                orl     P1, A           ; Port 1
                ret
; ---------------------------------------------------------------------------

code_D9C:                               ; CODE XREF: code_D79+8↑j
                mov     A, RAM_2A
                cjne    A, #3, code_DAC
                mov     A, R6
                jz      code_DA8
                orl     P1, #4          ; Port 1
                ret
; ---------------------------------------------------------------------------

code_DA8:                               ; CODE XREF: code_D79+29↑j
                anl     P1, #0xFB       ; Port 1
                ret
; ---------------------------------------------------------------------------

code_DAC:                               ; CODE XREF: code_D79+25↑j
                anl     P1, #0xF7       ; Port 1
                orl     P1, #0x20       ; Port 1
                ret
; End of function code_D79

; ---------------------------------------------------------------------------
                .byte    8
                .byte 0, 0x10, 0x18, 0x10, 0, 0x18, 0x10, 0, 2, 0, 0x20

; =============== S U B R O U T I N E =======================================


code_DBF:                               ; CODE XREF: extint0_0+E1↑p
                                        ; extint0_0+EC↑p ...
                mov     R1, #0x54 ; 'T'

code_DC1:                               ; CODE XREF: code_E00+2↓j
                lcall   code_E85
                nop
                nop
                nop
                mov     R5, RAM_B
                mov     R4, RAM_A
                mov     R3, RAM_9
                mov     R2, RAM_8
                mov     R0, #0x47 ; 'G'
                lcall   code_811
                nop
                nop
                nop
                mov     R0, #0x44 ; 'D'
                lcall   code_E04
                nop
                nop
                nop
                mov     R0, #0x50 ; 'P'
                inc     @R0
                cjne    @R0, #4, code_DFF
                mov     @R0, #0
                mov     DPTR, #0xEC1
                lcall   code_647
                nop
                nop
                nop
                lcall   code_E51
                nop
                nop
                nop
                clr     A
                mov     RAM_44, A
                mov     RAM_45, A
                mov     RAM_46, A
                mov     RAM_47, A

code_DFF:                               ; CODE XREF: code_DBF+23↑j
                ret
; End of function code_DBF


; =============== S U B R O U T I N E =======================================


code_E00:                               ; CODE XREF: extint0_0+158↑p
                                        ; extint0_0+163↑p ...
                mov     R1, #0x58 ; 'X'
                ajmp    code_DC1
; End of function code_E00


; =============== S U B R O U T I N E =======================================


code_E04:                               ; CODE XREF: extint0_0+107↑p
                                        ; extint0_0+181↑p ...
                mov     A, R2
                mov     @R0, A
                inc     R0
                mov     A, R3
                mov     @R0, A
                inc     R0
                mov     A, R4
                mov     @R0, A
                inc     R0
                mov     A, R5
                mov     @R0, A
                ret
; End of function code_E04


; =============== S U B R O U T I N E =======================================


code_E10:                               ; CODE XREF: code_E25+4↓p
                                        ; code_E31+3↓p ...
                mov     A, R5
                cpl     A
                add     A, #1
                mov     R5, A
                mov     A, R4
                cpl     A
                addc    A, #0
                mov     R4, A
                mov     A, R3
                cpl     A
                addc    A, #0
                mov     R3, A
                mov     A, R2
                cpl     A
                addc    A, #0
                mov     R2, A
                ret
; End of function code_E10


; =============== S U B R O U T I N E =======================================


code_E25:                               ; CODE XREF: extint0_0:code_B4A↑p
                                        ; extint0_0+C94↑p ...
                mov     A, R2
                rlc     A
                jnc     code_E2E
                acall   code_E10
                setb    RAM_2F.7
                ret
; ---------------------------------------------------------------------------

code_E2E:                               ; CODE XREF: code_E25+2↑j
                clr     RAM_2F.7
                ret
; End of function code_E25


; =============== S U B R O U T I N E =======================================


code_E31:                               ; CODE XREF: code_E37+7↓p
                                        ; code_E46+8↓p ...
                jnb     RAM_2F.7, code_E36
                acall   code_E10

code_E36:                               ; CODE XREF: code_E31↑j
                ret
; End of function code_E31


; =============== S U B R O U T I N E =======================================


code_E37:                               ; CODE XREF: extint0_0+810↑p
                                        ; extint0_0+821↑p ...
                acall   code_E25
                lcall   code_60F
                push    PSW             ; Program Status Word
                acall   code_E31
                pop     PSW             ; Program Status Word
                nop
                nop
                nop
                ret
; End of function code_E37


; =============== S U B R O U T I N E =======================================


code_E46:                               ; CODE XREF: extint0_0+908↑p
                                        ; extint0_0+91D↑p ...
                acall   code_E25
                lcall   code_77A
                nop
                nop
                nop
                acall   code_E31
                ret
; End of function code_E46


; =============== S U B R O U T I N E =======================================


code_E51:                               ; CODE XREF: extint0_0:code_933↑p
                                        ; extint0_0+911↑p ...
                acall   code_E25
                lcall   code_6B5
                nop
                nop
                nop
                acall   code_E31
                ret
; End of function code_E51


; =============== S U B R O U T I N E =======================================


code_E5C:                               ; CODE XREF: code:0E82↓p
                                        ; extint0_0+12E3↓p ...
                mov     A, RAM_B
                cpl     A
                add     A, #1
                mov     RAM_B, A
                mov     A, RAM_A
                cpl     A
                addc    A, #0
                mov     RAM_A, A
                mov     A, RAM_9
                cpl     A
                addc    A, #0
                mov     RAM_9, A
                mov     A, RAM_8
                cpl     A
                addc    A, #0
                mov     RAM_8, A
                ret
; End of function code_E5C

; ---------------------------------------------------------------------------
                rlc     A
                jnc     code_E7E
                acall   code_E10

code_E7E:                               ; CODE XREF: code:0E7A↑j
                ret
; ---------------------------------------------------------------------------
                rlc     A
                jnc     code_E84
                acall   code_E5C

code_E84:                               ; CODE XREF: code:0E80↑j
                ret

; =============== S U B R O U T I N E =======================================


code_E85:                               ; CODE XREF: code_DBF:code_DC1↑p
                mov     A, RAM_59
                jb      ACC7, code_E9E  ; Accumulator
                mov     RAM_B, RAM_5A
                mov     @R1, RAM_5A
                dec     R1
                mov     RAM_A, RAM_59
                mov     @R1, RAM_59
                dec     R1
                clr     A
                mov     RAM_9, A
                mov     @R1, A
                dec     R1
                mov     RAM_8, A
                ret
; ---------------------------------------------------------------------------

code_E9E:                               ; CODE XREF: code_E85+2↑j
                clr     C
                mov     A, RAM_5A
                cpl     A
                add     A, #1
                mov     RAM_B, A
                mov     @R1, A
                dec     R1
                mov     A, RAM_59
                anl     A, #0x7F
                cpl     A
                addc    A, #0
                mov     RAM_A, A
                mov     @R1, A
                dec     R1
                mov     A, #0xFF
                mov     RAM_9, A
                mov     @R1, A
                dec     R1
                mov     RAM_8, A
                mov     @R1, A
                ret
; End of function code_E85

; ---------------------------------------------------------------------------
                nop
                nop
                nop
                rr      A
                nop
                nop
                nop
                inc     A

; =============== S U B R O U T I N E =======================================


code_EC5:                               ; CODE XREF: extint0_0+82D↑p
                                        ; extint0_0+834↑p ...
                mov     R7, #4

code_EC7:                               ; CODE XREF: code_EC5+6↓j
                mov     A, @R0
                mov     @R1, A
                inc     R1
                inc     R0
                djnz    R7, code_EC7
                ret
; End of function code_EC5

; ---------------------------------------------------------------------------
                nop
                nop
                nop
                inc     RAM_0
                nop
                nop
                inc     R2
                nop
                nop
                anl     RAM_8, A
                nop
                nop
                orl     A, R6
                jb      RAM_20.0, code_EE0

code_EE0:                               ; CODE XREF: code:0EDD↑j
                orl     A, R6
                dec     R7
                nop
                nop
                nop
                xrl     A, #0
                nop
                rr      A
                mov     A, R0
                nop
                nop
                anl     A, B            ; B Register
                nop
                nop
                add     A, R2
                mov     R0, A

; =============== S U B R O U T I N E =======================================


code_EF2:                               ; CODE XREF: extint0_0+47E↑p
                                        ; extint0_0+B68↑p ...
                mov     A, RAM_2A
                cjne    A, #0, code_F24
                mov     DPTR, #0xA4
                lcall   code_66D
                mov     A, RAM_2B
                cjne    A, #0, code_F07

code_F02:                               ; CODE XREF: code_EF2+23↓j
                                        ; code_EF2+30↓j ...
                mov     R0, #0xA0
                acall   code_E04
                ret
; ---------------------------------------------------------------------------

code_F07:                               ; CODE XREF: code_EF2+D↑j
                cjne    A, #1, code_F17

code_F0A:                               ; CODE XREF: code_EF2+3F↓j
                                        ; code_EF2+4C↓j
                mov     DPTR, #0xED2
                lcall   code_647
                acall   code_E51
                nop
                nop
                nop
                ajmp    code_F02
; ---------------------------------------------------------------------------

code_F17:                               ; CODE XREF: code_EF2:code_F07↑j
                mov     DPTR, #0xEE2
                lcall   code_647
                acall   code_E51
                nop
                nop
                nop
                ajmp    code_F02
; ---------------------------------------------------------------------------

code_F24:                               ; CODE XREF: code_EF2+2↑j
                mov     A, RAM_2A
                cjne    A, #1, code_F36
                mov     DPTR, #0xA8
                lcall   code_66D
                mov     A, RAM_2B
                cjne    A, #0, code_F0A
                ajmp    code_F02
; ---------------------------------------------------------------------------

code_F36:                               ; CODE XREF: code_EF2+34↑j
                mov     DPTR, #0xAC
                lcall   code_66D
                mov     A, RAM_2B
                cjne    A, #0, code_F0A
                ajmp    code_F02
; End of function code_EF2


; =============== S U B R O U T I N E =======================================


code_F43:                               ; CODE XREF: extint0_0+434↑p
                                        ; extint0_0+160F↓p
                mov     A, RAM_2A
                jnz     code_F4C
                mov     R0, #0xA4
                acall   code_E04
                ret
; ---------------------------------------------------------------------------

code_F4C:                               ; CODE XREF: code_F43+2↑j
                cjne    A, #1, code_F54
                mov     R0, #0xA8
                acall   code_E04
                ret
; ---------------------------------------------------------------------------

code_F54:                               ; CODE XREF: code_F43:code_F4C↑j
                mov     R0, #0xAC
                acall   code_E04
                ret
; End of function code_F43


; =============== S U B R O U T I N E =======================================


code_F59:                               ; CODE XREF: code_FA1↓p
                                        ; code_FA1+D↓p ...
                setb    P1.7            ; Port 1
                setb    P1.6            ; Port 1
                acall   code_FFC
                clr     P1.7            ; Port 1
                acall   code_FFC
                clr     P1.6            ; Port 1
                acall   code_FFC
                ret
; End of function code_F59


; =============== S U B R O U T I N E =======================================


code_F68:                               ; CODE XREF: code_FDE+12↓p
                clr     P1.7            ; Port 1
                setb    P1.6            ; Port 1
                acall   code_FFC
                setb    P1.7            ; Port 1
                ret
; End of function code_F68


; =============== S U B R O U T I N E =======================================


code_F71:                               ; CODE XREF: code_FA1+6↓p
                                        ; code_FA1+B↓p ...
                setb    P1.7            ; Port 1

code_F73:                               ; CODE XREF: code_F71:code_F73↓j
                jb      P1.7, code_F73  ; Port 1
                setb    P1.6            ; Port 1
                acall   code_FFC
                clr     P1.6            ; Port 1
                ret
; End of function code_F71


; =============== S U B R O U T I N E =======================================


code_F7D:                               ; CODE XREF: code_FA1+4↓p
                                        ; code_FA1+9↓p ...
                clr     C
                mov     R1, #8

code_F80:                               ; CODE XREF: code_F7D+C↓j
                rlc     A
                mov     P1.7, C         ; Port 1
                setb    P1.6            ; Port 1
                acall   code_FFC
                clr     P1.6            ; Port 1
                djnz    R1, code_F80
                ret
; End of function code_F7D


; =============== S U B R O U T I N E =======================================


code_F8C:                               ; CODE XREF: code_FA1:code_FB6↓p
                mov     R1, #8
                setb    P1.7            ; Port 1
                clr     A

code_F91:                               ; CODE XREF: code_F8C+E↓j
                clr     P1.6            ; Port 1
                acall   code_FFC
                setb    P1.6            ; Port 1
                mov     C, P1.7         ; Port 1
                rlc     A
                djnz    R1, code_F91
                mov     @R0, A
                nop
                nop
                nop
                ret
; End of function code_F8C


; =============== S U B R O U T I N E =======================================


code_FA1:                               ; CODE XREF: extint0_0+1123↓p
                                        ; extint0_0+1147↓p ...
                acall   code_F59
                mov     A, #0xA0
                acall   code_F7D
                acall   code_F71
                mov     A, R6
                acall   code_F7D
                acall   code_F71
                acall   code_F59
                mov     A, #0xA1
                acall   code_F7D
                acall   code_F71

code_FB6:                               ; CODE XREF: code_FA1+2D↓j
                acall   code_F8C
                nop
                nop
                nop
                inc     R0
                djnz    R7, code_FC0
                ajmp    code_FD0
; ---------------------------------------------------------------------------

code_FC0:                               ; CODE XREF: code_FA1+1B↑j
                clr     P1.6            ; Port 1
                clr     P1.7            ; Port 1
                acall   code_FFC
                setb    P1.6            ; Port 1
                acall   code_FFC
                clr     P1.6            ; Port 1
                setb    P1.7            ; Port 1
                ajmp    code_FB6
; ---------------------------------------------------------------------------

code_FD0:                               ; CODE XREF: code_FA1+1D↑j
                clr     P1.6            ; Port 1
                clr     P1.7            ; Port 1
                setb    P1.6            ; Port 1
                acall   code_FFC
                setb    P1.7            ; Port 1
                nop
                nop
                nop
                ret
; End of function code_FA1


; =============== S U B R O U T I N E =======================================


code_FDE:                               ; CODE XREF: code_FDE+1C↓j
                                        ; extint0_0+1450↓p ...
                acall   code_F59
                mov     A, #0xA0
                acall   code_F7D
                acall   code_F71
                mov     A, R6
                acall   code_F7D
                acall   code_F71
                mov     A, @R0
                acall   code_F7D
                acall   code_F71
                acall   code_F68
                nop
                nop
                nop
                inc     R0
                inc     R6
                lcall   code_1145
                djnz    R7, code_FDE
; End of function code_FDE


; =============== S U B R O U T I N E =======================================


code_FFC:                               ; CODE XREF: code_F59+4↑p
                                        ; code_F59+8↑p ...
                nop
                nop
                nop
                nop
                ret
; End of function code_FFC

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR code_100D

code_1001:                              ; CODE XREF: code_100D+3↓j
                mov     A, RAM_37
                anl     A, #0x9F
                mov     RAM_37, A
                ljmp    code_101B
; ---------------------------------------------------------------------------

code_100A:                              ; CODE XREF: code_100D↓j
                ljmp    code_1098
; END OF FUNCTION CHUNK FOR code_100D

; =============== S U B R O U T I N E =======================================


code_100D:                              ; CODE XREF: code_3A1↑p

; FUNCTION CHUNK AT 1001 SIZE 0000000C BYTES

                jb      RAM_28.0, code_100A
                jb      RAM_28.2, code_1001
                mov     A, RAM_37
                anl     A, #0xDB
                orl     A, #0x40
                mov     RAM_37, A

code_101B:                              ; CODE XREF: code_100D-6↑j
                mov     A, RAM_2A
                jz      code_106D
                cjne    A, #1, code_1049
                mov     R0, #0x37 ; '7'
                mov     A, @R0
                anl     A, #0x7F
                orl     A, #1
                mov     @R0, A
                inc     R0
                inc     R0
                mov     A, @R0
                orl     A, #4
                mov     @R0, A
                mov     A, RAM_33
                anl     A, #0xFE
                mov     RAM_33, A
                mov     R0, #0x34 ; '4'
                mov     A, RAM_2B
                cjne    A, #0, code_1044
                mov     A, @R0
                anl     A, #0xF0
                orl     A, #2
                mov     @R0, A
                ret
; ---------------------------------------------------------------------------

code_1044:                              ; CODE XREF: code_100D+2D↑j
                mov     A, @R0
                anl     A, #0xF0
                mov     @R0, A
                ret
; ---------------------------------------------------------------------------

code_1049:                              ; CODE XREF: code_100D+12↑j
                cjne    A, #2, code_1060
                mov     R0, #0x37 ; '7'
                mov     A, @R0
                anl     A, #0xE6
                orl     A, #4
                mov     @R0, A
                mov     A, RAM_39
                anl     A, #0xFB
                mov     RAM_39, A
                mov     A, RAM_33
                anl     A, #0xFE
                mov     RAM_33, A

code_1060:                              ; CODE XREF: code_100D:code_1049↑j
                mov     R0, #0x34 ; '4'
                mov     A, RAM_2B
                cjne    A, #0, code_106A
                ljmp    code_1080
; ---------------------------------------------------------------------------

code_106A:                              ; CODE XREF: code_100D+57↑j
                ljmp    code_108A
; ---------------------------------------------------------------------------

code_106D:                              ; CODE XREF: code_100D+10↑j
                mov     A, RAM_37
                anl     A, #0x7A
                mov     RAM_37, A
                mov     R0, #0x39 ; '9'
                mov     A, @R0
                orl     A, #4
                mov     @R0, A
                mov     R0, #0x34 ; '4'
                mov     A, RAM_2B
                cjne    A, #0, code_1087

code_1080:                              ; CODE XREF: code_100D+5A↑j
                mov     A, @R0
                anl     A, #0xF0
                orl     A, #8
                mov     @R0, A
                ret
; ---------------------------------------------------------------------------

code_1087:                              ; CODE XREF: code_100D+70↑j
                cjne    A, #1, code_1091

code_108A:                              ; CODE XREF: code_100D:code_106A↑j
                mov     A, @R0
                anl     A, #0xF0
                orl     A, #4
                mov     @R0, A
                ret
; ---------------------------------------------------------------------------

code_1091:                              ; CODE XREF: code_100D:code_1087↑j
                mov     A, @R0
                anl     A, #0xF0
                orl     A, #2
                mov     @R0, A
                ret
; ---------------------------------------------------------------------------

code_1098:                              ; CODE XREF: code_100D:code_100A↑j
                jb      RAM_28.2, code_10D0
                mov     A, RAM_37
                anl     A, #0xBA
                orl     A, #0x20
                mov     RAM_37, A

code_10A3:                              ; CODE XREF: code_100D+C9↓j
                mov     R0, #0x34 ; '4'
                mov     A, @R0
                anl     A, #0xF0
                mov     @R0, A
                mov     A, RAM_2A
                jz      code_10F6
                cjne    A, #1, code_10D8
                mov     R0, #0x39 ; '9'
                mov     A, @R0
                anl     A, #0xFB
                mov     @R0, A
                mov     R0, #0x37 ; '7'
                mov     A, @R0
                anl     A, #0xFA
                orl     A, #0x80
                mov     @R0, A
                mov     R0, #0x33 ; '3'
                mov     A, @R0
                orl     A, #1
                mov     @R0, A
                mov     A, RAM_2B
                cjne    A, #0, code_10CF
                mov     R0, #0x32 ; '2'
                mov     A, @R0
                orl     A, #1
                mov     @R0, A

code_10CF:                              ; CODE XREF: code_100D+B9↑j
                ret
; ---------------------------------------------------------------------------

code_10D0:                              ; CODE XREF: code_100D:code_1098↑j
                mov     A, RAM_37
                anl     A, #0x9F
                mov     RAM_37, A
                ajmp    code_10A3
; ---------------------------------------------------------------------------

code_10D8:                              ; CODE XREF: code_100D+A0↑j
                cjne    A, #2, code_10E9
                mov     A, RAM_33
                anl     A, #0xFE
                mov     RAM_33, A
                mov     R0, #0x37 ; '7'
                mov     A, @R0

code_10E4:                              ; CODE XREF: code:1275↓j
                anl     A, #0x7A
                orl     A, #0x10
                mov     @R0, A

code_10E9:                              ; CODE XREF: code_100D:code_10D8↑j
                mov     R0, #0x34 ; '4'
                mov     A, RAM_2B
                cjne    A, #0, code_10F3
                ljmp    code_1109
; ---------------------------------------------------------------------------

code_10F3:                              ; CODE XREF: code_100D+E0↑j
                ljmp    code_1113
; ---------------------------------------------------------------------------

code_10F6:                              ; CODE XREF: code_100D+9E↑j
                mov     R0, #0x37 ; '7'
                mov     A, @R0
                anl     A, #0xEF
                orl     A, #0x80
                mov     @R0, A
                mov     R0, #0x39 ; '9'
                mov     A, @R0
                anl     A, #0xFB
                mov     @R0, A
                mov     A, RAM_2B
                cjne    A, #0, code_1110

code_1109:                              ; CODE XREF: code_100D+E3↑j
                mov     R0, #0x30 ; '0'
                mov     A, @R0
                orl     A, #1
                mov     @R0, A
                ret
; ---------------------------------------------------------------------------

code_1110:                              ; CODE XREF: code_100D+F9↑j
                cjne    A, #1, code_111A

code_1113:                              ; CODE XREF: code_100D:code_10F3↑j
                mov     R0, #0x31 ; '1'
                mov     A, @R0
                orl     A, #1
                mov     @R0, A
                ret
; ---------------------------------------------------------------------------

code_111A:                              ; CODE XREF: code_100D:code_1110↑j
                mov     R0, #0x32 ; '2'
                mov     A, @R0
                orl     A, #1
                mov     @R0, A
                ret
; End of function code_100D


; =============== S U B R O U T I N E =======================================


code_1121:                              ; CODE XREF: extint0_0+9D1↑p
                                        ; extint0_0:code_BFE↑p
                lcall   code_D29
                jb      RAM_28.5, code_1131
                mov     R7, #0x7C ; '|'
                lcall   code_113B
                setb    P1.0            ; Port 1
                setb    RAM_28.5
                ret
; ---------------------------------------------------------------------------

code_1131:                              ; CODE XREF: code_1121+3↑j
                mov     R7, #0
                lcall   code_113B
                clr     P1.0            ; Port 1
                clr     RAM_28.5
                ret
; End of function code_1121


; =============== S U B R O U T I N E =======================================


code_113B:                              ; CODE XREF: code:0511↑p
                                        ; code_1121+8↑p ...
                mov     R2, #4
                mov     R0, #0x30 ; '0'
                mov     A, R7

code_1140:                              ; CODE XREF: code_113B+7↓j
                mov     @R0, A
                inc     R0
                djnz    R2, code_1140
                ret
; End of function code_113B


; =============== S U B R O U T I N E =======================================


code_1145:                              ; CODE XREF: code_FDE+19↑p
                mov     R1, #0x54 ; 'T'

code_1147:                              ; CODE XREF: code_1145+6↓j
                mov     R2, #0xEC

code_1149:                              ; CODE XREF: code_1145:code_1149↓j
                djnz    R2, code_1149
                djnz    R1, code_1147
                mov     R3, #4

code_114F:                              ; CODE XREF: code_1145:code_114F↓j
                djnz    R3, code_114F
                ret
; End of function code_1145

; ---------------------------------------------------------------------------
                .byte 0x78 ; x
                .byte 0x4C ; L
                .byte 0x7F, 4, 0x7E, 0x10, 0x12, 0xF, 0xDE, 0, 0, 0, 0x78
                .byte 0x48, 0x7F, 4, 0x7E, 0x10, 0x12, 0xF, 0xA1, 0, 0
                .byte 0xFF;(array 7)
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR extint0_0

code_1170:                              ; CODE XREF: extint0_0:code_CA↑j
                mov     R6, #0
                mov     R7, #4
                mov     R0, #0xB0
                lcall   code_FA1
                mov     R0, #0xB0
                lcall   code_128F
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_60F
                jc      code_1203
                mov     DPTR, #0x1267
                lcall   code_647
                lcall   code_60F
                jnc     code_1203

code_1194:                              ; CODE XREF: extint0_0+11C6↓j
                mov     R6, #4
                mov     R7, #4
                mov     R0, #0xB4
                lcall   code_FA1
                mov     R0, #0xB4
                lcall   code_128F
                mov     DPTR, #0x126B
                lcall   code_647
                lcall   code_60F
                jc      code_121B
                mov     DPTR, #0x126F
                lcall   code_647
                lcall   code_60F
                jnc     code_121B

code_11B8:                              ; CODE XREF: extint0_0+11DE↓j
                mov     R6, #8
                mov     R7, #4
                mov     R0, #0xB8
                lcall   code_FA1
                mov     R0, #0xB8
                lcall   code_128F
                mov     DPTR, #0x126B
                lcall   code_647
                lcall   code_60F
                jc      code_1233
                mov     DPTR, #0x128B
                lcall   code_647
                lcall   code_60F
                jnc     code_1233

code_11DC:                              ; CODE XREF: extint0_0+11F6↓j
                mov     R6, #0xC
                mov     R7, #4
                mov     R0, #0xBC
                lcall   code_FA1
                mov     R0, #0xBC
                lcall   code_128F
                mov     DPTR, #0x126B
                lcall   code_647
                lcall   code_60F
                jc      code_124B
                mov     DPTR, #0x126F
                lcall   code_647
                lcall   code_60F
                jnc     code_124B

code_1200:                              ; CODE XREF: extint0_0+120E↓j
                ljmp    code_CD
; ---------------------------------------------------------------------------

code_1203:                              ; CODE XREF: extint0_0+1134↑j
                                        ; extint0_0+113F↑j
                mov     RAM_22, #0x35 ; '5'
                mov     R6, #0xB6
                lcall   code_4E6
                lcall   code_569
                mov     DPTR, #0x126F
                lcall   code_625
                mov     R0, #0xB0
                lcall   code_E04
                ajmp    code_1194
; ---------------------------------------------------------------------------

code_121B:                              ; CODE XREF: extint0_0+1158↑j
                                        ; extint0_0+1163↑j
                mov     RAM_22, #0x35 ; '5'
                mov     R6, #0xB6
                lcall   code_4E6
                lcall   code_569
                mov     DPTR, #0x1263
                lcall   code_625
                mov     R0, #0xB4
                lcall   code_E04
                ajmp    code_11B8
; ---------------------------------------------------------------------------

code_1233:                              ; CODE XREF: extint0_0+117C↑j
                                        ; extint0_0+1187↑j
                mov     RAM_22, #0x35 ; '5'
                mov     R6, #0xB6
                lcall   code_4E6
                lcall   code_569
                mov     DPTR, #0x1263
                lcall   code_625
                mov     R0, #0xB8
                lcall   code_E04
                ajmp    code_11DC
; ---------------------------------------------------------------------------

code_124B:                              ; CODE XREF: extint0_0+11A0↑j
                                        ; extint0_0+11AB↑j
                mov     RAM_22, #0x35 ; '5'
                mov     R6, #0xB6
                lcall   code_4E6
                lcall   code_569
                mov     DPTR, #0x1263
                lcall   code_625
                mov     R0, #0xBC
                lcall   code_E04
                ajmp    code_1200
; END OF FUNCTION CHUNK FOR extint0_0
; ---------------------------------------------------------------------------
                nop
                nop
                rr      A
                mov     A, R0
                nop
                nop
                inc     @R0
                jc      code_126C

code_126C:                              ; CODE XREF: code:126A↑j
                nop
                ljmp    0xBC00
; ---------------------------------------------------------------------------
                nop
                inc     RAM_14
                nop
                nop
                ajmp    code_10E4
; ---------------------------------------------------------------------------
                nop
                nop
                rr      A
                mov     A, R0
                nop
                nop
                ljmp    0xEE00
; ---------------------------------------------------------------------------
                .byte    0
                .byte 1, 0xF4, 0, 0x98, 0x96, 0x80, 0, 0x4C, 0x4B, 0x40
                .byte 0, 0, 7, 8

; =============== S U B R O U T I N E =======================================


code_128F:                              ; CODE XREF: extint0_0+1128↑p
                                        ; extint0_0+114C↑p ...
                mov     A, @R0
                mov     R2, A
                inc     R0
                mov     A, @R0
                mov     R3, A
                inc     R0
                mov     A, @R0
                mov     R4, A
                inc     R0
                mov     A, @R0
                mov     R5, A
                ret
; End of function code_128F


; =============== S U B R O U T I N E =======================================


code_129B:                              ; CODE XREF: extint0_0+902↑p
                                        ; extint0_0+945↑p ...
                mov     A, @R0
                mov     RAM_8, A
                inc     R0
                mov     A, @R0
                mov     RAM_9, A
                inc     R0
                mov     A, @R0
                mov     RAM_A, A
                inc     R0
                mov     A, @R0
                mov     RAM_B, A
                ret
; End of function code_129B

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR extint0_0

code_12AB:                              ; CODE XREF: extint0_0:code_3E0↑j
                clr     RAM_28.0
                mov     R0, #0x67 ; 'g'
                cjne    @R0, #0, code_130F
                mov     DPTR, #0x1263
                lcall   code_625
                mov     R0, #0xB0
                lcall   code_E04
                mov     DPTR, #0x1263
                lcall   code_625
                mov     R0, #0xB4
                lcall   code_E04
                mov     DPTR, #0x1263
                lcall   code_625
                mov     R0, #0xB8
                lcall   code_E04
                mov     DPTR, #0x1263
                lcall   code_625
                mov     R0, #0xBC
                lcall   code_E04
                mov     R0, #0x67 ; 'g'
                inc     @R0
                mov     RAM_66, RAM_2A
                mov     RAM_2A, #0
                lcall   code_BD8
                jb      RAM_28.1, code_12F5
                mov     RAM_22, #0x34 ; '4'
                mov     R6, #0x2E ; '.'
                lcall   code_4E6

code_12F5:                              ; CODE XREF: extint0_0+1297↑j
                                        ; extint0_0+12CA↓j ...
                mov     A, RAM_67
                mov     DPTR, #0x1541
                movc    A, @A+DPTR
                mov     RAM_35, A
                mov     RAM_36, #0xFC
                mov     A, RAM_39
                anl     A, #0xFE
                mov     RAM_39, A
                lcall   code_3A1
                mov     RAM_64, #0xC
                ljmp    code_109
; ---------------------------------------------------------------------------

code_130F:                              ; CODE XREF: extint0_0+125C↑j
                cjne    @R0, #1, code_1372
                jb      RAM_28.1, code_131F

code_1315:                              ; CODE XREF: extint0_0:code_1370↓j
                                        ; extint0_0:code_1458↓j
                mov     RAM_22, #0x34 ; '4'
                mov     R6, #0x2E ; '.'

code_131A:                              ; CODE XREF: extint0_0+1313↓j
                lcall   code_4E6
                ajmp    code_12F5
; ---------------------------------------------------------------------------

code_131F:                              ; CODE XREF: extint0_0+12BF↑j
                mov     A, P0           ; Port 0
                anl     A, #0x10
                jnz     code_12F5
                mov     DPTR, #0x1283
                lcall   code_625
                mov     DPTR, #0x3C ; '<'
                lcall   code_693
                mov     A, RAM_8
                rlc     A
                jnc     code_1339
                lcall   code_E5C

code_1339:                              ; CODE XREF: extint0_0+12E1↑j
                lcall   code_6B5
                nop
                nop
                nop
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_60F
                jc      code_1364
                mov     DPTR, #0x1267
                lcall   code_647
                lcall   code_60F
                jnc     code_1364
                mov     R0, #0xC0
                lcall   code_E04
                mov     R0, #0x67 ; 'g'
                inc     @R0
                ajmp    code_12F5
; ---------------------------------------------------------------------------

code_135F:                              ; CODE XREF: extint0_0+131B↓j
                                        ; extint0_0+136D↓j ...
                mov     R0, #0x67 ; 'g'
                dec     @R0
                ajmp    code_12F5
; ---------------------------------------------------------------------------

code_1364:                              ; CODE XREF: extint0_0+12F5↑j
                                        ; extint0_0+1300↑j ...
                mov     R6, #0x9E
                ajmp    code_131A
; ---------------------------------------------------------------------------

code_1368:                              ; CODE XREF: extint0_0+1329↓j
                mov     A, P0           ; Port 0
                anl     A, #8
                jnz     code_12F5
                ajmp    code_135F
; ---------------------------------------------------------------------------

code_1370:                              ; CODE XREF: extint0_0+1322↓j
                                        ; extint0_0+1372↓j
                ajmp    code_1315
; ---------------------------------------------------------------------------

code_1372:                              ; CODE XREF: extint0_0:code_130F↑j
                cjne    @R0, #2, code_13C2
                jb      RAM_28.1, code_1370
                mov     A, P0           ; Port 0
                anl     A, #0x10
                jnz     code_1368
                mov     DPTR, #0x1283
                lcall   code_625
                mov     DPTR, #0x3C ; '<'
                lcall   code_693
                mov     A, RAM_8
                rlc     A
                jnc     code_1392
                lcall   code_E5C

code_1392:                              ; CODE XREF: extint0_0+133A↑j
                lcall   code_6B5
                nop
                nop
                nop
                mov     DPTR, #0x126B
                lcall   code_647
                lcall   code_60F
                jc      code_1364
                mov     DPTR, #0x128B
                lcall   code_647
                lcall   code_60F
                jnc     code_1364
                mov     R0, #0xC8
                lcall   code_E04
                mov     R0, #0x67 ; 'g'
                inc     @R0
                ajmp    code_12F5
; ---------------------------------------------------------------------------

code_13B8:                              ; CODE XREF: extint0_0+136B↓j
                                        ; extint0_0+1396↓j
                ajmp    code_12F5
; ---------------------------------------------------------------------------

code_13BA:                              ; CODE XREF: extint0_0+1379↓j
                mov     A, P0           ; Port 0
                anl     A, #8
                jnz     code_13B8
                ajmp    code_135F
; ---------------------------------------------------------------------------

code_13C2:                              ; CODE XREF: extint0_0:code_1372↑j
                cjne    @R0, #3, code_13ED
                jnb     RAM_28.1, code_1370
                mov     A, P0           ; Port 0
                anl     A, #0x10
                jnz     code_13BA
                mov     DPTR, #0x3C ; '<'
                lcall   code_66D
                mov     A, R2
                rlc     A
                jnc     code_13DB
                lcall   code_E10

code_13DB:                              ; CODE XREF: extint0_0+1383↑j
                mov     R0, #0x9C
                lcall   code_E04
                mov     R0, #0x67 ; 'g'
                inc     @R0
                ajmp    code_12F5
; ---------------------------------------------------------------------------

code_13E5:                              ; CODE XREF: extint0_0+13A4↓j
                mov     A, P0           ; Port 0
                anl     A, #8
                jnz     code_13B8
                ajmp    code_135F
; ---------------------------------------------------------------------------

code_13ED:                              ; CODE XREF: extint0_0:code_13C2↑j
                cjne    @R0, #4, code_145A
                jnb     RAM_28.1, code_1458
                mov     A, P0           ; Port 0
                anl     A, #0x10
                jnz     code_13E5
                mov     R0, #0x9C
                acall   code_128F
                mov     DPTR, #0x1263
                lcall   code_647
                lcall   code_77A
                mov     DPTR, #0x3C ; '<'
                lcall   code_693
                mov     A, RAM_8
                rlc     A
                jnc     code_1414
                lcall   code_E5C

code_1414:                              ; CODE XREF: extint0_0+13BC↑j
                lcall   code_6B5
                nop
                nop
                nop
                mov     DPTR, #0x126B
                lcall   code_647
                lcall   code_60F
                jc      code_1443
                mov     DPTR, #0x126F
                lcall   code_647
                lcall   code_60F
                jnc     code_1443
                lcall   code_3A1
                mov     R0, #0xC4
                lcall   code_E04
                mov     RAM_2A, #1
                lcall   code_BD8
                mov     R0, #0x67 ; 'g'
                inc     @R0

code_1441:                              ; CODE XREF: extint0_0+13F6↓j
                ajmp    code_12F5
; ---------------------------------------------------------------------------

code_1443:                              ; CODE XREF: extint0_0+13D0↑j
                                        ; extint0_0+13DB↑j
                ajmp    code_1364
; ---------------------------------------------------------------------------

code_1445:                              ; CODE XREF: extint0_0+1411↓j
                mov     A, P0           ; Port 0
                anl     A, #8
                jnz     code_1441
                mov     RAM_2A, #0
                lcall   code_BD8
                ajmp    code_135F
; ---------------------------------------------------------------------------

code_1453:                              ; CODE XREF: extint0_0+1435↓j
                                        ; extint0_0+1440↓j
                ajmp    code_1364
; ---------------------------------------------------------------------------

code_1455:                              ; CODE XREF: extint0_0:code_145A↓j
                ljmp    code_150E
; ---------------------------------------------------------------------------

code_1458:                              ; CODE XREF: extint0_0+139D↑j
                                        ; extint0_0+140A↓j
                ajmp    code_1315
; ---------------------------------------------------------------------------

code_145A:                              ; CODE XREF: extint0_0:code_13ED↑j
                cjne    @R0, #5, code_1455
                jnb     RAM_28.1, code_1458
                mov     A, P0           ; Port 0
                anl     A, #0x10
                jnz     code_1445
                mov     DPTR, #0x1287
                lcall   code_625
                mov     DPTR, #0x3C ; '<'
                lcall   code_693
                mov     A, RAM_8
                rlc     A
                jnc     code_147A
                lcall   code_E5C

code_147A:                              ; CODE XREF: extint0_0+1422↑j
                lcall   code_6B5
                nop
                nop
                mov     DPTR, #0x126B
                lcall   code_647
                lcall   code_60F
                jc      code_1453
                mov     DPTR, #0x126F
                lcall   code_647
                lcall   code_60F
                jnc     code_1453
                mov     R0, #0x67 ; 'g'
                inc     @R0
                mov     R0, #0xCC
                lcall   code_E04
                mov     R0, #0xC0
                mov     R7, #4
                mov     R6, #0
                lcall   code_FDE
                mov     R0, #0x48 ; 'H'
                mov     R7, #4
                mov     R6, #0
                lcall   code_FA1
                mov     R0, #0xC0
                mov     R6, #0xB0
                lcall   code_1520
                nop
                nop
                nop
                mov     R0, #0xC4
                mov     R7, #4
                mov     R6, #4
                lcall   code_FDE
                mov     R0, #0x48 ; 'H'
                mov     R7, #4
                mov     R6, #4
                lcall   code_FA1
                mov     R0, #0xC4
                mov     R6, #0xB4
                lcall   code_1520
                nop
                nop
                nop
                mov     R0, #0xC8
                mov     R7, #4
                mov     R6, #8
                lcall   code_FDE
                nop
                mov     R0, #0x48 ; 'H'
                mov     R7, #4
                mov     R6, #8
                lcall   code_FA1
                mov     R0, #0xC8
                mov     R6, #0xB8
                lcall   code_1520
                nop
                nop
                nop
                mov     R0, #0xCC
                mov     R7, #4
                mov     R6, #0xC
                lcall   code_FDE
                mov     R0, #0x48 ; 'H'
                mov     R7, #4
                mov     R6, #0xC
                lcall   code_FA1
                mov     R0, #0xCC
                mov     R6, #0xBC
                lcall   code_1520
                nop
                nop
                nop

code_150E:                              ; CODE XREF: extint0_0:code_1455↑j
                mov     R0, #0x33 ; '3'
                mov     @R0, #0
                dec     R0
                mov     @R0, #0x7A ; 'z'
                dec     R0
                mov     @R0, #0x7E ; '~'
                dec     R0
                mov     @R0, #0xB6
                lcall   code_3A1
                ajmp    code_12F5
; END OF FUNCTION CHUNK FOR extint0_0

; =============== S U B R O U T I N E =======================================


code_1520:                              ; CODE XREF: extint0_0+1460↑p
                                        ; extint0_0+147C↑p ...
                acall   code_128F
                mov     R0, #0x48 ; 'H'
                acall   code_129B
                lcall   code_60F
                jz      code_1534
                mov     RAM_22, #0x35 ; '5'
                mov     R6, #0xB6
                lcall   code_4E6
                ret
; ---------------------------------------------------------------------------

code_1534:                              ; CODE XREF: code_1520+9↑j
                mov     R0, RAM_6
                lcall   code_E04
                ret
; End of function code_1520

; ---------------------------------------------------------------------------
                mov     A, RAM_39
                anl     A, #0xFE
                mov     RAM_39, A
                ret
; ---------------------------------------------------------------------------
                .byte 0xFC
                .byte  0xC
                .byte 0xDA
                .byte 0x9E
                .byte 0x2E ; .
                .byte 0xB6
                .byte 0xF6
                .byte 0x1C
                .byte 0xFE
                .byte 0xBE
                .byte 0xFF;(array 5)

; =============== S U B R O U T I N E =======================================


serint_0:                               ; CODE XREF: serint↑j
                jnb     SCON.1, code_1556 ; Serial Port Control
                clr     SCON.1          ; Serial Port Control
                reti
; ---------------------------------------------------------------------------

code_1556:                              ; CODE XREF: serint_0↑j
                push    RAM_0
                push    RAM_1
                push    RAM_6
                push    RAM_7
                push    ACC             ; Accumulator
                push    PSW             ; Program Status Word
                jnb     SCON.0, code_158F ; Serial Port Control
                jb      RAM_27.1, code_159E
                mov     A, SBUF         ; Serial Port Buffer
                mov     R7, A
                mov     R0, #0xF0
                mov     @R0, A
                mov     R0, #0xD0
                mov     A, @R0
                cjne    A, #6, code_157F
                mov     RAM_22, #0x39 ; '9'
                mov     R6, #0xBE
                lcall   code_4E6
                ljmp    code_15A6
; ---------------------------------------------------------------------------

code_157F:                              ; CODE XREF: serint_0+21↑j
                lcall   code_15BB
                inc     @R0
                mov     A, R7
                mov     @R1, A

code_1585:                              ; CODE XREF: serint_0+61↓j
                                        ; code:15B9↓j
                mov     SBUF, A         ; Serial Port Buffer
                xrl     A, #0xA
                jnz     code_158D
                setb    RAM_27.1

code_158D:                              ; CODE XREF: serint_0+39↑j
                clr     SCON.0          ; Serial Port Control

code_158F:                              ; CODE XREF: serint_0+12↑j
                setb    RAM_27.2
                pop     PSW             ; Program Status Word
                pop     ACC             ; Accumulator
                pop     RAM_7
                pop     RAM_6
                pop     RAM_1
                pop     RAM_0
                reti
; ---------------------------------------------------------------------------

code_159E:                              ; CODE XREF: serint_0+15↑j
                mov     RAM_22, #0x38 ; '8'
                mov     R6, #0xFE
                lcall   code_4E6

code_15A6:                              ; CODE XREF: serint_0+2C↑j
                mov     R0, #0xD0
                mov     @R0, #0
                mov     R0, #0xEF
                mov     @R0, #0
                mov     R0, #0xF0
                mov     A, @R0
                ajmp    code_1585
; End of function serint_0

; ---------------------------------------------------------------------------
                mov     R0, #0xD0
                mov     @R0, #0
                mov     A, RAM_45
                ajmp    code_1585

; =============== S U B R O U T I N E =======================================


code_15BB:                              ; CODE XREF: serint_0:code_157F↑p
                                        ; code:code_176B↓p
                mov     R0, #0xD0
; End of function code_15BB


; =============== S U B R O U T I N E =======================================


code_15BD:                              ; CODE XREF: extint0_0+159D↓p
                mov     A, @R0
                mov     R1, #0xD1
                add     A, R1
                mov     R1, A
                ret
; End of function code_15BD


; =============== S U B R O U T I N E =======================================


code_15C3:                              ; CODE XREF: extint0_0:code_B5C↑p
                                        ; extint0_0:code_CF9↑p ...
                anl     IE, #0xEF       ; Interrupt Enable Register 0
                lcall   code_569
                mov     R0, #0xD7

code_15CB:                              ; CODE XREF: code_15C3+13↓j
                mov     A, @R0
                mov     SBUF, A         ; Serial Port Buffer

code_15CE:                              ; CODE XREF: code_15C3:code_15CE↓j
                jnb     SCON.1, code_15CE ; Serial Port Control
                clr     SCON.1          ; Serial Port Control
                inc     R0
                xrl     A, #0xA
                jnz     code_15CB
                orl     IE, #0x80       ; Interrupt Enable Register 0
                ret
; End of function code_15C3

; ---------------------------------------------------------------------------
                anl     A, @R0
                orl     A, RAM_50
                anl     RAM_4B, #0x42
                orl     A, R6
                orl     A, @R0
                orl     A, @R1
                inc     R2
; START OF FUNCTION CHUNK FOR extint0_0

code_15E6:                              ; CODE XREF: extint0_0:code_187↑j
                                        ; extint0_0+1689↓j
                mov     R7, #0

code_15E8:                              ; CODE XREF: extint0_0+15A4↓j
                mov     DPTR, #0x15DC
                mov     A, R7
                movc    A, @A+DPTR
                mov     R6, A
                mov     R0, #0xEF
                acall   code_15BD
                mov     A, @R1
                xrl     A, R6
                jz      code_161D
                inc     R7
                cjne    R7, #0xA, code_15E8
                mov     R0, #0xD7
                mov     @R0, #0x45 ; 'E'
                inc     R0
                mov     @R0, #0x52 ; 'R'
                inc     R0
                mov     @R0, #0x20 ; ' '
                inc     R0
                mov     @R0, #0xA
                mov     RAM_22, #0x37 ; '7'
                mov     R6, #0x1C
                lcall   code_4E6
                ljmp    code_16E0
; END OF FUNCTION CHUNK FOR extint0_0
; ---------------------------------------------------------------------------
                mov     R0, #0xD0
                mov     @R0, #0
                mov     R0, #0xEF
                mov     @R0, #0
                ljmp    code_16DE
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR extint0_0

code_161D:                              ; CODE XREF: extint0_0+15A1↑j
                mov     A, R7
                cjne    A, #0, code_162A
                mov     RAM_2A, #0
                mov     RAM_2B, #2
                ljmp    code_16C2
; ---------------------------------------------------------------------------

code_162A:                              ; CODE XREF: extint0_0+15CB↑j
                cjne    A, #1, code_1636
                mov     RAM_2A, #1
                mov     RAM_2B, #1
                ljmp    code_16C2
; ---------------------------------------------------------------------------

code_1636:                              ; CODE XREF: extint0_0:code_162A↑j
                cjne    A, #2, code_1642
                mov     RAM_2A, #2
                mov     RAM_2B, #1
                ljmp    code_16C2
; ---------------------------------------------------------------------------

code_1642:                              ; CODE XREF: extint0_0:code_1636↑j
                cjne    A, #3, code_164A
                setb    RAM_27.6
                ljmp    code_16D9
; ---------------------------------------------------------------------------

code_164A:                              ; CODE XREF: extint0_0:code_1642↑j
                cjne    A, #4, code_1673
                mov     A, RAM_2B
                cjne    A, #0, code_1668
                setb    RAM_28.7
                mov     DPTR, #0x48 ; 'H'
                lcall   code_66D
                nop
                nop
                nop
                mov     R0, #0xA0
                lcall   code_E04
                lcall   code_F43
                ljmp    code_16D9
; ---------------------------------------------------------------------------

code_1668:                              ; CODE XREF: extint0_0+15FC↑j
                mov     RAM_22, #0x32 ; '2'
                mov     R6, #0xDA
                lcall   code_4E6
                ljmp    code_16E0
; ---------------------------------------------------------------------------

code_1673:                              ; CODE XREF: extint0_0:code_164A↑j
                cjne    A, #5, code_167B
                setb    RAM_27.3
                ljmp    code_16D9
; ---------------------------------------------------------------------------

code_167B:                              ; CODE XREF: extint0_0:code_1673↑j
                cjne    A, #6, code_1683
                clr     RAM_27.3
                ljmp    code_16D9
; ---------------------------------------------------------------------------

code_1683:                              ; CODE XREF: extint0_0:code_167B↑j
                cjne    A, #7, code_1696
                setb    RAM_2F.0
                clr     RAM_28.4
                mov     A, RAM_38
                orl     A, #0x40
                mov     RAM_38, A
                lcall   code_3A1
                ljmp    code_16D9
; ---------------------------------------------------------------------------

code_1696:                              ; CODE XREF: extint0_0:code_1683↑j
                cjne    A, #8, code_16AC
                clr     RAM_2F.0
                setb    RAM_28.4
                mov     RAM_3A, #5
                lcall   code_D64
                mov     A, RAM_38
                anl     A, #0xBF
                mov     RAM_38, A
                ljmp    code_16D9
; ---------------------------------------------------------------------------

code_16AC:                              ; CODE XREF: extint0_0:code_1696↑j
                cjne    A, #9, code_16B7
                jnb     RAM_27.6, code_16DE
                clr     RAM_27.6
                ljmp    code_1774
; ---------------------------------------------------------------------------

code_16B7:                              ; CODE XREF: extint0_0:code_16AC↑j
                mov     RAM_22, #0x37 ; '7'
                mov     R6, #0x1C
                lcall   code_4E6
                ljmp    code_16E0
; ---------------------------------------------------------------------------

code_16C2:                              ; CODE XREF: extint0_0+15D4↑j
                                        ; extint0_0+15E0↑j ...
                lcall   code_D79
                lcall   code_D29
                mov     R0, #0xA0
                lcall   code_D58
                clr     RAM_28.3
                clr     RAM_28.7
                clr     A
                mov     R2, A
                lcall   code_2BD
                lcall   code_527

code_16D9:                              ; CODE XREF: extint0_0+15F4↑j
                                        ; extint0_0+1612↑j ...
                mov     R0, #0xEF
                inc     @R0
                ajmp    code_15E6
; ---------------------------------------------------------------------------

code_16DE:                              ; CODE XREF: extint0_0+127↑j
                                        ; code:161A↑j ...
                clr     RAM_27.1

code_16E0:                              ; CODE XREF: extint0_0+15BC↑j
                                        ; extint0_0+161D↑j ...
                mov     R0, #0xD0
                mov     @R0, #0
                mov     R0, #0xEF
                mov     @R0, #0
                ljmp    code_19C
; END OF FUNCTION CHUNK FOR extint0_0

; =============== S U B R O U T I N E =======================================


code_16EB:                              ; CODE XREF: extint0_0+B1F↑p
                                        ; extint0_0+CBC↑p
                mov     R0, #0xD7
                jnb     RAM_2F.7, code_16F4
                mov     @R0, #0x2D ; '-'
                ajmp    code_16F6
; ---------------------------------------------------------------------------

code_16F4:                              ; CODE XREF: code_16EB+2↑j
                mov     @R0, #0x2B ; '+'

code_16F6:                              ; CODE XREF: code_16EB+7↑j
                inc     R0
                mov     R1, #0x5F ; '_'
                mov     A, @R1
                add     A, #0x30 ; '0'
                mov     @R0, A
                inc     R1
                inc     R0
                mov     A, RAM_2A
                cjne    A, #1, code_1727
                mov     R3, #2

code_1706:                              ; CODE XREF: code_16EB+21↓j
                mov     A, @R1
                add     A, #0x30 ; '0'
                mov     @R0, A
                inc     R1
                inc     R0
                djnz    R3, code_1706
                mov     A, RAM_2B
                jnz     code_171D
                mov     @R0, #0x2E ; '.'
                inc     R0
                mov     A, @R1
                add     A, #0x30 ; '0'
                mov     @R0, A
                inc     R0

code_171A:                              ; CODE XREF: code_16EB+3A↓j
                                        ; code_16EB+4F↓j ...
                mov     @R0, #0xA
                ret
; ---------------------------------------------------------------------------

code_171D:                              ; CODE XREF: code_16EB+25↑j
                mov     A, @R1
                add     A, #0x30 ; '0'
                mov     @R0, A
                inc     R0
                mov     @R0, #0x2E ; '.'
                inc     R0
                ajmp    code_171A
; ---------------------------------------------------------------------------

code_1727:                              ; CODE XREF: code_16EB+16↑j
                jz      code_1749
                mov     A, RAM_2B
                jnz     code_173C

code_172D:                              ; CODE XREF: code_16EB+60↓j
                mov     @R0, #0x2E ; '.'
                inc     R0
                mov     R3, #3

code_1732:                              ; CODE XREF: code_16EB+4D↓j
                                        ; code_16EB+5C↓j
                mov     A, @R1
                add     A, #0x30 ; '0'
                mov     @R0, A
                inc     R0
                inc     R1
                djnz    R3, code_1732
                ajmp    code_171A
; ---------------------------------------------------------------------------

code_173C:                              ; CODE XREF: code_16EB+40↑j
                                        ; code_16EB+65↓j
                mov     A, @R1
                add     A, #0x30 ; '0'
                mov     @R0, A
                inc     R0
                inc     R1
                mov     @R0, #0x2E ; '.'
                inc     R0
                mov     R3, #2
                ajmp    code_1732
; ---------------------------------------------------------------------------

code_1749:                              ; CODE XREF: code_16EB:code_1727↑j
                mov     A, RAM_2B
                jz      code_172D
                cjne    A, #1, code_1752
                ajmp    code_173C
; ---------------------------------------------------------------------------

code_1752:                              ; CODE XREF: code_16EB+62↑j
                mov     R3, #2

code_1754:                              ; CODE XREF: code_16EB+6F↓j
                mov     A, @R1
                add     A, #0x30 ; '0'
                mov     @R0, A
                inc     R0
                inc     R1
                djnz    R3, code_1754
                mov     @R0, #0x2E ; '.'
                inc     R0
                inc     R1
                mov     A, @R1
                add     A, #0x30 ; '0'
                mov     @R0, A
                inc     R0
                ajmp    code_171A
; End of function code_16EB

; ---------------------------------------------------------------------------
                jb      RAM_27.1, code_176B
                ret
; ---------------------------------------------------------------------------

code_176B:                              ; CODE XREF: code:1767↑j
                acall   code_15BB
                mov     A, @R1
                cjne    A, #0xA, code_1773
                clr     RAM_27.1

code_1773:                              ; CODE XREF: code:176E↑j
                ret
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR extint0_0

code_1774:                              ; CODE XREF: extint0_0+1661↑j
                mov     R0, #0xD7
                mov     A, RAM_2A
                jz      code_1785
                cjne    A, #1, code_1781
                mov     @R0, #0x45 ; 'E'
                ajmp    code_1787
; ---------------------------------------------------------------------------

code_1781:                              ; CODE XREF: extint0_0+1727↑j
                mov     @R0, #0x50 ; 'P'
                ajmp    code_1787
; ---------------------------------------------------------------------------

code_1785:                              ; CODE XREF: extint0_0+1725↑j
                mov     @R0, #0x56 ; 'V'

code_1787:                              ; CODE XREF: extint0_0+172C↑j
                                        ; extint0_0+1730↑j
                inc     R0
                mov     A, RAM_2B
                orl     A, #0x30
                mov     @R0, A
                inc     R0
                mov     @R0, #0x4B ; 'K'
                inc     R0
                jb      RAM_28.7, code_1798
                mov     @R0, #0x30 ; '0'
                ajmp    code_179A
; ---------------------------------------------------------------------------

code_1798:                              ; CODE XREF: extint0_0+173E↑j
                mov     @R0, #0x31 ; '1'

code_179A:                              ; CODE XREF: extint0_0+1743↑j
                inc     R0
                mov     @R0, #0x4C ; 'L'
                inc     R0
                jb      RAM_28.1, code_17A5
                mov     @R0, #0x31 ; '1'
                ajmp    code_17A7
; ---------------------------------------------------------------------------

code_17A5:                              ; CODE XREF: extint0_0+174B↑j
                mov     @R0, #0x30 ; '0'

code_17A7:                              ; CODE XREF: extint0_0+1750↑j
                inc     R0
                mov     @R0, #0x46 ; 'F'
                inc     R0
                jb      RAM_2F.0, code_17B2
                mov     @R0, #0x30 ; '0'
                ajmp    code_17B4
; ---------------------------------------------------------------------------

code_17B2:                              ; CODE XREF: extint0_0+1758↑j
                mov     @R0, #0x31 ; '1'

code_17B4:                              ; CODE XREF: extint0_0+175D↑j
                inc     R0
                mov     @R0, #0xA
                acall   code_15C3
                mov     R0, #0xD0
                mov     R1, #0xD6
                mov     @R0, #0
                mov     @R1, #0
                clr     RAM_27.1
                ajmp    code_16DE
; END OF FUNCTION CHUNK FOR extint0_0

; =============== S U B R O U T I N E =======================================


code_17C5:                              ; CODE XREF: extint0_0:code_B59↑p
                                        ; extint0_0:code_CF6↑p
                mov     R0, #0xD7
                mov     @R0, #0x4F ; 'O'
                inc     R0
                mov     @R0, #0x4C ; 'L'
                inc     R0
                mov     @R0, #0xA
                ret
; End of function code_17C5


; =============== S U B R O U T I N E =======================================


code_17D0:                              ; CODE XREF: extint0_0+B14↑p
                                        ; extint0_0+CB1↑p
                mov     R0, #0xD7
                mov     @R0, #0x45 ; 'E'
                inc     R0
                mov     @R0, #0x72 ; 'r'
                inc     R0
                mov     A, RAM_22
                mov     @R0, A
                inc     R0
                mov     @R0, #0xA
                ret
; End of function code_17D0

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR extint0_0

code_17DF:                              ; CODE XREF: extint0_0:code_17E2↓j
                ljmp    code_CA
; ---------------------------------------------------------------------------

code_17E2:                              ; CODE XREF: extint0_0+74↑j
                jb      P05, code_17DF  ; Port 0
                mov     IE, #0          ; Interrupt Enable Register 0

code_17E8:                              ; CODE XREF: extint0_0+17B7↓j
                                        ; extint0_0+17E4↓j
                mov     SBUF, #0x55 ; 'U' ; Serial Port Buffer

code_17EB:                              ; CODE XREF: extint0_0:code_17EB↓j
                jnb     SCON.1, code_17EB ; Serial Port Control
                mov     R0, #0xEC
                mov     @R0, #0x14

code_17F2:                              ; CODE XREF: extint0_0+17D1↓j
                jnb     SCON.0, code_181B ; Serial Port Control
                mov     A, SBUF         ; Serial Port Buffer
                cjne    A, #0x55, code_180D ; 'U'

code_17FA:                              ; CODE XREF: extint0_0+17C5↓j
                clr     SCON.1          ; Serial Port Control
                clr     SCON.0          ; Serial Port Control
                mov     R5, #4
                mov     R0, #0x30 ; '0'

code_1802:                              ; CODE XREF: extint0_0+17B2↓j
                mov     @R0, #2
                inc     R0
                djnz    R5, code_1802
                lcall   code_3A1
                ljmp    code_17E8
; ---------------------------------------------------------------------------

code_180D:                              ; CODE XREF: extint0_0+17A4↑j
                mov     R6, #0x1C
                mov     RAM_22, #0x37 ; '7'
                lcall   code_4E6
                lcall   code_569
                ljmp    code_17FA
; ---------------------------------------------------------------------------

code_181B:                              ; CODE XREF: extint0_0:code_17F2↑j
                mov     R0, #0xEC
                cjne    @R0, #0, code_1823
                ljmp    code_1827
; ---------------------------------------------------------------------------

code_1823:                              ; CODE XREF: extint0_0+17CA↑j
                dec     @R0
                ljmp    code_17F2
; ---------------------------------------------------------------------------

code_1827:                              ; CODE XREF: extint0_0+17CD↑j
                lcall   code_183A
                clr     SCON.1          ; Serial Port Control
                mov     R6, #0x1C
                mov     RAM_22, #0x37 ; '7'
                lcall   code_4E6
                lcall   code_569
                ljmp    code_17E8
; END OF FUNCTION CHUNK FOR extint0_0

; =============== S U B R O U T I N E =======================================


code_183A:                              ; CODE XREF: extint0_0:code_1827↑p
                mov     R5, #0xE5

code_183C:                              ; CODE XREF: code_183A:code_183C↓j
                djnz    R5, code_183C
                ret
; End of function code_183A

; ---------------------------------------------------------------------------
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
                .byte 0xFF;(array 1)
; end of 'code'

; ===========================================================================

; Segment type: Internal processor memory & SFR
                ;.segment RAM
.equ RAM_0,0                            ; DATA XREF: code:0C67↑w
                                        ; code:0ED1↑w ...
.equ RAM_1,1                            ; DATA XREF: extint1_0+6↑r
                                        ; extint1_0+39↑w ...
.equ RAM_2,2                            ; DATA XREF: extint1_0+8↑r
                                        ; extint1_0+37↑w
.equ RAM_3,3                            ; DATA XREF: extint1_0+A↑r
                                        ; extint1_0+35↑w
.equ RAM_4,4                            ; DATA XREF: code:0591↑w
                                        ; code:05A7↑r ...
.equ RAM_5,5                            ; DATA XREF: code:0593↑w
                                        ; code:code_597↑r ...
.equ RAM_6,6                            ; DATA XREF: code_D58↑r
                                        ; code_D58+9↑w ...
.equ RAM_7,7                            ; DATA XREF: serint_0+C↑r
                                        ; serint_0+45↑w
.equ RAM_8,8                            ; DATA XREF: code_60F+2↑r
                                        ; code_647+6↑w ...
.equ RAM_9,9                            ; DATA XREF: code_60F+7↑r
                                        ; code_647+B↑w ...
.equ RAM_A,0xA                          ; DATA XREF: code_60F+C↑r
                                        ; code_647+10↑w ...
.equ RAM_B,0xB                          ; DATA XREF: code_60F+11↑r
                                        ; code_647+15↑w ...
.equ RAM_C,0xC                          ; DATA XREF: code_6B5+2↑w
                                        ; code_6B5+98↑r ...
.equ RAM_D,0xD                          ; DATA XREF: code_6B5+4↑w
                                        ; code_6B5+93↑r ...
.equ RAM_E,0xE                          ; DATA XREF: code_6B5+6↑w
                                        ; code_6B5+8E↑r ...
.equ RAM_F,0xF                          ; DATA XREF: code_6B5+8↑w
                                        ; code_6B5:code_73E↑r ...




.equ RAM_14,0x14                        ; DATA XREF: code:1271↑w











.equ RAM_20,0x20                        ; DATA XREF: code:0EDD↑r

.equ RAM_22,0x22                        ; DATA XREF: extint0_0:code_16B↑r
                                        ; extint0_0:code_411↑w ...



.equ RAM_26,0x26                        ; DATA XREF: extint0_0+114↑w
                                        ; extint0_0+3D3↑w
.equ RAM_27,0x27                        ; DATA XREF: extint0_0+A4↑r
                                        ; extint0_0+A7↑w ...
.equ RAM_28,0x28                        ; DATA XREF: code_2FE+4↑r
                                        ; code_2FE:code_346↑r ...
.equ RAM_29,0x29                        ; DATA XREF: extint0_0:code_109↑r
                                        ; extint0_0:code_126↑r ...
.equ RAM_2A,0x2A                        ; DATA XREF: extint0_0+54↑w
                                        ; extint0_0+6A↑w ...
.equ RAM_2B,0x2B                        ; DATA XREF: extint0_0+421↑r
                                        ; extint0_0+46B↑r ...



.equ RAM_2F,0x2F                        ; DATA XREF: code_2FE+3D↑r
                                        ; code_2FE+6E↑r ...



.equ RAM_33,0x33                        ; DATA XREF: code_100D+23↑r
                                        ; code_100D+27↑w ...

.equ RAM_35,0x35                        ; DATA XREF: code_2FE+83↑w
                                        ; extint0_0+12A8↑w
.equ RAM_36,0x36                        ; DATA XREF: code_2FE:code_359↑r
                                        ; code_2FE+5F↑w ...
.equ RAM_37,0x37                        ; DATA XREF: extint0_0+3B6↑w
                                        ; extint0_0+3CB↑w ...
.equ RAM_38,0x38                        ; DATA XREF: extint0_0+191↑r
                                        ; extint0_0+197↑w ...
.equ RAM_39,0x39                        ; DATA XREF: code_2FE:code_35F↑r
                                        ; code_2FE+65↑w ...
.equ RAM_3A,0x3A                        ; DATA XREF: extint0_0+3F9↑w
                                        ; extint0_0:code_8E7↑r ...









.equ RAM_44,0x44                        ; DATA XREF: code_DBF+38↑w
.equ RAM_45,0x45                        ; DATA XREF: code_DBF+3A↑w
                                        ; code:15B7↑r
.equ RAM_46,0x46                        ; DATA XREF: code_DBF+3C↑w
.equ RAM_47,0x47                        ; DATA XREF: code_DBF+3E↑w



.equ RAM_4B,0x4B                        ; DATA XREF: code:15DF↑w




.equ RAM_50,0x50                        ; DATA XREF: code_D29+A↑w
                                        ; code:15DD↑r








.equ RAM_59,0x59                        ; DATA XREF: extint1_0+1B↑w
                                        ; extint1_0+33↑w ...
.equ RAM_5A,0x5A                        ; DATA XREF: extint1_0+21↑w
                                        ; extint1_0+2E↑w ...









.equ RAM_64,0x64                        ; DATA XREF: extint0_0:code_421↑r
                                        ; extint0_0:code_442↑w ...
.equ RAM_65,0x65                        ; DATA XREF: extint0_0+112↑w
                                        ; extint0_0+459↑w
.equ RAM_66,0x66                        ; DATA XREF: extint0_0+46B↑w
                                        ; extint0_0+48C↑r ...
.equ RAM_67,0x67                        ; DATA XREF: extint0_0+34↑w
                                        ; extint0_0:code_203↑w ...





.equ RAM_6D,0x6D                        ; DATA XREF: extint0_0↑o


















































































































































; end of 'RAM'

; ===========================================================================

; Segment type: Internal processor memory & SFR
                ;.segment FSR
; .equ $,  0x80
.equ P0,0x80                            ; DATA XREF: extint0_0+70↑w
                                        ; extint0_0+72↑w ...
                                        ; Port 0
.equ SP,0x81                            ; DATA XREF: extint0_0↑w
                                        ; Stack Pointer
.equ DP0L,0x82                          ; DATA XREF: code_625:code_639↑r
                                        ; code_647:code_65F↑r ...
                                        ; Data Pointer Low Byte
.equ DP0H,0x83                          ; DATA XREF: code_625↑r
                                        ; code_647↑r ...
                                        ; Data Pointer High Byte
.equ DP1L,0x84                          ; Data Pointer 1 Low Byte
.equ DP1H,0x85                          ; Data Pointer 1 High Byte
.equ SPDR,0x86                          ; SPI Data Register
.equ PCON,0x87                          ; DATA XREF: extint0_0+4↑w
                                        ; extint0_0+14↑w ...
                                        ; Power Control Register
.equ TCON,0x88                          ; DATA XREF: extint0_0+E↑w
                                        ; Timer Control Register
.equ TMOD,0x89                          ; DATA XREF: extint0_0+B↑w
                                        ; Timer Mode Control Register
.equ TL0,0x8A                           ; Timer 0 Low Byte
.equ TL1,0x8B                           ; Timer 1 Low Byte
.equ TH0,0x8C                           ; Timer 0 High Byte
.equ TH1,0x8D                           ; DATA XREF: extint0_0+11↑w
                                        ; Timer 1 High Byte


.equ P1,0x90                            ; DATA XREF: extint0_0+8E↑w
                                        ; extint0_0+BF↑w ...
                                        ; Port 1





.equ WMCON,0x96                         ; Watchdog and Memory Control Register

.equ SCON,0x98                          ; DATA XREF: extint0_0+8↑w
                                        ; serint_0↑r ...
                                        ; Serial Port Control
.equ SBUF,0x99                          ; DATA XREF: serint_0+18↑r
                                        ; serint_0:code_1585↑w ...
                                        ; Serial Port Buffer






.equ P2,0xA0                            ; DATA XREF: extint0_0+4B↑w
                                        ; extint0_0+96↑w ...
                                        ; Port 2







.equ IE,0xA8                            ; DATA XREF: start↑w
                                        ; extint0_0+19↑w ...
                                        ; Interrupt Enable Register 0

.equ SPSR,0xAA                          ; SPI Status Register , different to AT89C52





.equ P3,0xB0                            ; DATA XREF: extint0_0:code_8B↑w
                                        ; extint0_0+3A↑w ...
                                        ; Port 3







.equ IP,0xB8                            ; DATA XREF: extint0_0+17↑w
                                        ; extint0_0:code_F2↑w
                                        ; Interrupt Priority Register















.equ T2CON,0xC8                         ; DATA XREF: extint0_0+6↑w
                                        ; code_519↑r ...
                                        ; Timer 2 Control
.equ T2MOD,0xC9                         ; DATA XREF: extint0_0+1C↑w
                                        ; Timer 2 Mode
.equ RCAP2L,0xCA                        ; DATA XREF: extint0_0+1F↑w
                                        ; Timer 2 Capture Low Byte
.equ RCAP2H,0xCB                        ; DATA XREF: extint0_0+22↑w
                                        ; Timer 2 Capture High Byte
.equ TL2,0xCC                           ; Timer 2 Low Byte
.equ TH2,0xCD                           ; Timer 2 High Byte


.equ PSW,0xD0                           ; DATA XREF: extint1_0+2↑r
                                        ; extint1_0+3D↑w ...
                                        ; Program Status Word




.equ SPCR,0xD5                          ; SPI Control Register






.equ FSR_DC,0xDC                        ; DATA XREF: code:0ACF↑w



.equ ACC,0xE0                           ; DATA XREF: extint1_0↑r
                                        ; extint1_0+3F↑w ...
                                        ; Accumulator















.equ B,0xF0                             ; DATA XREF: extint1_0+4↑r
                                        ; extint1_0+3B↑w ...
                                        ; B Register















; end of 'FSR'


                .end ;start
